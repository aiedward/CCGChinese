Train Size: 64

Test Size: 64

alpha_0 = 1.0
C = 1.0E-5
initialMultiplier = 10.0
NP init = 10.0
Parser beam  = 200

Start LexPhi: 0
Start train
add Dataset
add Dataset
Start training...
Mar 15, 2016 10:49:48 AM null
WARNING: not find library.properties in classpath use it by default !
Mar 15, 2016 10:49:48 AM org.ansj.util.MyStaticValue getCRFSplitWord
INFO: begin init crf model!
Mar 15, 2016 10:49:58 AM org.ansj.util.MyStaticValue getCRFSplitWord
INFO: load crf crf use time:10061
Mar 15, 2016 10:50:01 AM org.ansj.library.UserDefineLibrary loadFile
INFO: init user userLibrary ok path is : /Users/TsaonYih/Documents/Study/EXP/thesis/CCGChinese/library/default.dic
Mar 15, 2016 10:50:01 AM org.ansj.library.UserDefineLibrary initAmbiguityLibrary
INFO: init ambiguityLibrary ok!
Mar 15, 2016 10:50:01 AM org.ansj.library.DATDictionary loadDAT
INFO: init core library ok use time :547
Mar 15, 2016 10:50:04 AM org.ansj.library.NgramLibrary <clinit>
INFO: init ngram ok use time :2594
Training, iteration 0
parsing: 西单附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近的餐厅 : null
parsing: 西单附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近有哪些餐厅 : null
parsing: 西单附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，人均70 : null
parsing: 西单附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，六位，人均七十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (npeople:t $0 6:i) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，六位，人均七十 : null
parsing: 西单附近的餐厅，六位，人均七十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (npeople:t $0 6:i) (< (price:i $0) 70:i)))
parsing: 西单附近的川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近的川菜馆 : null
parsing: 西单附近的川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近可以吃川菜的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近可以吃川菜的餐厅 : null
parsing: 西单附近可以吃川菜的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西直门附近人均30的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) 30:i)))
parsing: 西直门附近人均30的餐厅 : null
parsing: 西直门附近人均30的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) 30:i)))
parsing: 宣武门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近有哪些餐厅 : null
parsing: 宣武门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近有哪些川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜馆 : null
parsing: 宣武门附近有哪些川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜餐厅 : null
parsing: 宣武门附近有哪些川菜餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 中关村附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
parsing: 中关村附近的餐厅 : null
parsing: 中关村附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
parsing: 中关村附近的餐厅，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (park:t $0:i) (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (park:t $0:i) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (park:t $0:i) (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (park:t $0:i) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (restaurant:t $0) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (restaurant:t $0) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and ($0 $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and ($0 $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : ZHONGGUANCUN:s
functor: S/NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 $0) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : ZHONGGUANCUN:s
functor: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 $0) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S : (park:t $0:i)
functor: S/S : (lambda $0 t (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) $0)))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S : (park:t $0:i)
functor: S\S : (lambda $0 t (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) $0)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : $0:i
functor: S/NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : $0:i
functor: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0))))
parsing: 中关村附近的餐厅，要有停车位 : null
parsing: 中关村附近的餐厅，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
parsing: 中关村附近的餐厅，人均80 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) 80:i)))
parsing: 中关村附近的餐厅，人均80 : null
parsing: 中关村附近的餐厅，人均80 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) 80:i)))
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (npeople:t $0 10:i) (< (price:i $0) 80:i)))
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : null
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (npeople:t $0 10:i) (< (price:i $0) 80:i)))
parsing: 石景山附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近的餐厅 : null
parsing: 石景山附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近有哪些餐馆 : null
parsing: 石景山附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近的湘菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的湘菜馆 : null
parsing: 石景山附近的湘菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (< (price:i $0) 70:i)))
parsing: 石景山附近的餐厅，人均70 : null
parsing: 石景山附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (< (price:i $0) 70:i)))
parsing: 东直门附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 东直门附近有哪些餐馆 : null
parsing: 东直门附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 东直门附近的火锅自助餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 东直门附近的火锅自助餐厅 : null
parsing: 东直门附近的火锅自助餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 东直门附近的火锅自助餐厅，每位50左右 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 东直门附近的火锅自助餐厅，每位50左右 : null
parsing: 东直门附近的火锅自助餐厅，每位50左右 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 东直门附近的餐厅，大众家常菜，人均100 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 JIACHANGCAI:s) (< (price:i $0) 100:i)))
parsing: 东直门附近的餐厅，大众家常菜，人均100 : null
parsing: 东直门附近的餐厅，大众家常菜，人均100 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 JIACHANGCAI:s) (< (price:i $0) 100:i)))
parsing: 北大平庄附近的饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s)))
parsing: 北大平庄附近的饭店 : null
parsing: 北大平庄附近的饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s)))
parsing: 北大平庄附近的餐厅，两位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i)))
parsing: 北大平庄附近的餐厅，两位 : null
parsing: 北大平庄附近的餐厅，两位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i)))
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i) (not （taste:t)))
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : null
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i) (not （taste:t)))
parsing: 酒仙桥附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐馆 : null
parsing: 酒仙桥附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : null
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 宣武门附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近的餐厅 : null
parsing: 宣武门附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近的餐厅，烧烤类的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，烧烤类的 : null
parsing: 宣武门附近的餐厅，烧烤类的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : null
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANQIAO:s) (npeople:t $0 5:i) (label:t $0 SHUANGUO:s)))
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : null
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANQIAO:s) (npeople:t $0 5:i) (label:t $0 SHUANGUO:s)))
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (npeople:t $0 10:i) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : null
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (npeople:t $0 10:i) (label:t $0 XIANGCAI:s)))
parsing: 我们想在东直门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 我们想在东直门附近找个餐厅 : null
parsing: 我们想在东直门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 我们想在东直门附近找个地方吃火锅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 我们想在东直门附近找个地方吃火锅 : null
parsing: 我们想在东直门附近找个地方吃火锅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : null
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i) (park:t $0)))
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : null
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i) (park:t $0)))
parsing: 我想在东便门附近订个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s)))
parsing: 我想在东便门附近订个餐厅 : null
parsing: 我想在东便门附近订个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s)))
parsing: 我想在东便门附近订个餐厅，八个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i)))
parsing: 我想在东便门附近订个餐厅，八个人 : null
parsing: 我想在东便门附近订个餐厅，八个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : null
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我们想在天安门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 我们想在天安门附近找个餐厅 : null
parsing: 我们想在天安门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近的餐馆 : null
parsing: 天安门附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近有哪些餐厅 : null
parsing: 天安门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 我们有五个人，想在天安门附近吃个饭 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们有五个人，想在天安门附近吃个饭 : null
parsing: 我们有五个人，想在天安门附近吃个饭 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 5:i) (zone:t $0 TIANANMEN:s) (< (price:i $0) 80:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 5:i) (zone:t $0 TIANANMEN:s) (< (price:i $0) 80:i)))
parsing: 我想在雍和宫附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想在雍和宫附近找个餐厅 : null
parsing: 我想在雍和宫附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想订个雍和宫附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想订个雍和宫附近的餐厅 : null
parsing: 我想订个雍和宫附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : (lambda $0 e (and (restaurant:t $0) (label:t $0 YUECAI:s)))
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : null
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : (lambda $0 e (and (restaurant:t $0) (label:t $0 YUECAI:s)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (npeople:t $0 10:i) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (npeople:t $0 10:i) (< (price:i $0) 60:i)))
parsing: 月坛附近的快捷小吃 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s)))
parsing: 月坛附近的快捷小吃 : null
parsing: 月坛附近的快捷小吃 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s)))
parsing: 月坛附近的快捷小吃，两个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s) (npeople:t $0 2:i)))
parsing: 月坛附近的快捷小吃，两个人 : null
parsing: 月坛附近的快捷小吃，两个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s) (npeople:t $0 2:i)))
parsing: 我想订个餐厅，清淡一些的 : (lambda $0 e (and (restaurant:t $0) (label:t $0 QINGDAN:s)))
parsing: 我想订个餐厅，清淡一些的 : null
parsing: 我想订个餐厅，清淡一些的 : (lambda $0 e (and (restaurant:t $0) (label:t $0 QINGDAN:s)))
parsing: 酒仙桥附近有什么饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近有什么饭店 : null
parsing: 酒仙桥附近有什么饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐厅，要十五人包间 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 酒仙桥附近的餐厅，要十五人包间 : null
parsing: 酒仙桥附近的餐厅，要十五人包间 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : null
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 10:i) (label:t $0 JIACHANGCAI:s)))
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : null
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 10:i) (label:t $0 JIACHANGCAI:s)))
parsing: 西单附近的北京特色小吃，二位 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 BEIJINGTESE:s)))
parsing: 西单附近的北京特色小吃，二位 : null
parsing: 西单附近的北京特色小吃，二位 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 BEIJINGTESE:s)))
parsing: 北大庄附近的餐厅，三位，吃火锅 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 3:i) (label:t $0 HUOGUO:s)))
parsing: 北大庄附近的餐厅，三位，吃火锅 : null
parsing: 北大庄附近的餐厅，三位，吃火锅 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 3:i) (label:t $0 HUOGUO:s)))
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 20:i) (< (price:i $0) 80:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : null
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 20:i) (< (price:i $0) 80:i) (label:t $0 JIACHANGCAI:s)))
parsing: 月坛附近的餐厅，要麻辣口味的 : (lambda $0 e (and (restaurant:t $0) (taste:t $0 MALA:s)))
parsing: 月坛附近的餐厅，要麻辣口味的 : null
parsing: 月坛附近的餐厅，要麻辣口味的 : (lambda $0 e (and (restaurant:t $0) (taste:t $0 MALA:s)))
parsing: 东便门附近的快餐店 : (lambda $0 e (and (restaurant:t $0) (label:t $0 KUAICAN:s)))
parsing: 东便门附近的快餐店 : null
parsing: 东便门附近的快餐店 : (lambda $0 e (and (restaurant:t $0) (label:t $0 KUAICAN:s)))
Testing
parsing: 西单附近的餐厅 : null
parsing: 西单附近有哪些餐厅 : null
parsing: 西单附近的餐厅，人均70 : null
parsing: 西单附近的餐厅，六位，人均七十 : null
parsing: 西单附近的川菜馆 : null
parsing: 西单附近可以吃川菜的餐厅 : null
parsing: 西直门附近人均30的餐厅 : null
parsing: 宣武门附近有哪些餐厅 : null
parsing: 宣武门附近有哪些川菜馆 : null
parsing: 宣武门附近有哪些川菜餐厅 : null
parsing: 中关村附近的餐厅 : null
parsing: 中关村附近的餐厅，要有停车位 : null
parsing: 中关村附近的餐厅，人均80 : null
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : null
parsing: 石景山附近的餐厅 : null
parsing: 石景山附近有哪些餐馆 : null
parsing: 石景山附近的湘菜馆 : null
parsing: 石景山附近的餐厅，人均70 : null
parsing: 东直门附近有哪些餐馆 : null
parsing: 东直门附近的火锅自助餐厅 : null
parsing: 东直门附近的火锅自助餐厅，每位50左右 : null
parsing: 东直门附近的餐厅，大众家常菜，人均100 : null
parsing: 北大平庄附近的饭店 : null
parsing: 北大平庄附近的餐厅，两位 : null
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : null
parsing: 酒仙桥附近的餐馆 : null
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : null
parsing: 宣武门附近的餐厅 : null
parsing: 宣武门附近的餐厅，烧烤类的 : null
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : null
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : null
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : null
parsing: 我们想在东直门附近找个餐厅 : null
parsing: 我们想在东直门附近找个地方吃火锅 : null
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : null
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : null
parsing: 我想在东便门附近订个餐厅 : null
parsing: 我想在东便门附近订个餐厅，八个人 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : null
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : null
parsing: 我们想在天安门附近找个餐厅 : null
parsing: 天安门附近的餐馆 : null
parsing: 天安门附近有哪些餐厅 : null
parsing: 我们有五个人，想在天安门附近吃个饭 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : null
parsing: 我想在雍和宫附近找个餐厅 : null
parsing: 我想订个雍和宫附近的餐厅 : null
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : null
parsing: 月坛附近的快捷小吃 : null
parsing: 月坛附近的快捷小吃，两个人 : null
parsing: 我想订个餐厅，清淡一些的 : null
parsing: 酒仙桥附近有什么饭店 : null
parsing: 酒仙桥附近的餐厅，要十五人包间 : null
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : null
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : null
parsing: 西单附近的北京特色小吃，二位 : null
parsing: 北大庄附近的餐厅，三位，吃火锅 : null
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : null
parsing: 月坛附近的餐厅，要麻辣口味的 : null
parsing: 东便门附近的快餐店 : null
-----------------------------
Recall : 29/64 = 0.453125
Precision : 29/64 = 0.453125
F1: 0.453125
No Parses : 0
EMPTY Recall : 29/64 = 0.453125
EMPTY Precision : 29/64 = 0.453125
EMPTY F1: 0.453125
-----------
Training, iteration 1
parsing: 西单附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近的餐厅 : null
parsing: 西单附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近有哪些餐厅 : null
parsing: 西单附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，人均70 : null
parsing: 西单附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，六位，人均七十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (npeople:t $0 6:i) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，六位，人均七十 : null
parsing: 西单附近的餐厅，六位，人均七十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (npeople:t $0 6:i) (< (price:i $0) 70:i)))
parsing: 西单附近的川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近的川菜馆 : null
parsing: 西单附近的川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近可以吃川菜的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近可以吃川菜的餐厅 : null
parsing: 西单附近可以吃川菜的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西直门附近人均30的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) 30:i)))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (< (price:i $1) $0) (restaurant:t $1) (zone:t $1 XIZHIMEN:s))))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s)))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (< (price:i $2) $1) ($0 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (< (price:i $1) $0) (restaurant:t $1) (zone:t $1 XIZHIMEN:s))))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s)))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (< (price:i $2) $1) ($0 $2)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 XIZHIMEN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (zone:t $2 XIZHIMEN:s) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (zone:t $2 XIZHIMEN:s) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 XIZHIMEN:s))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 XIZHIMEN:s))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP : XIZHIMEN:s
functor: S\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP : XIZHIMEN:s
functor: S\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) (< ($0 $2) $1)))))
parsing: 西直门附近人均30的餐厅 : null
parsing: 西直门附近人均30的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) 30:i)))
parsing: 宣武门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近有哪些餐厅 : null
parsing: 宣武门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近有哪些川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜馆 : null
parsing: 宣武门附近有哪些川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜餐厅 : null
parsing: 宣武门附近有哪些川菜餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 中关村附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
parsing: 中关村附近的餐厅 : null
parsing: 中关村附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
parsing: 中关村附近的餐厅，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (park:t $0:i) (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (park:t $0:i) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (park:t $0:i) (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (park:t $0:i) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (restaurant:t $0) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (restaurant:t $0) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and ($0 $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and ($0 $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : ZHONGGUANCUN:s
functor: S/NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 $0) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : ZHONGGUANCUN:s
functor: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 $0) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S : (park:t $0:i)
functor: S/S : (lambda $0 t (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) $0)))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S : (park:t $0:i)
functor: S\S : (lambda $0 t (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) $0)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : $0:i
functor: S/NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : $0:i
functor: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0))))
parsing: 中关村附近的餐厅，要有停车位 : null
parsing: 中关村附近的餐厅，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
parsing: 中关村附近的餐厅，人均80 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) 80:i)))
parsing: 中关村附近的餐厅，人均80 : null
parsing: 中关村附近的餐厅，人均80 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) 80:i)))
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (npeople:t $0 10:i) (< (price:i $0) 80:i)))
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : null
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (npeople:t $0 10:i) (< (price:i $0) 80:i)))
parsing: 石景山附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近的餐厅 : null
parsing: 石景山附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近有哪些餐馆 : null
parsing: 石景山附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近的湘菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的湘菜馆 : null
parsing: 石景山附近的湘菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (< (price:i $0) 70:i)))
parsing: 石景山附近的餐厅，人均70 : null
parsing: 石景山附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (< (price:i $0) 70:i)))
parsing: 东直门附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 东直门附近有哪些餐馆 : null
parsing: 东直门附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 东直门附近的火锅自助餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 东直门附近的火锅自助餐厅 : null
parsing: 东直门附近的火锅自助餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 东直门附近的火锅自助餐厅，每位50左右 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 东直门附近的火锅自助餐厅，每位50左右 : null
parsing: 东直门附近的火锅自助餐厅，每位50左右 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 东直门附近的餐厅，大众家常菜，人均100 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 JIACHANGCAI:s) (< (price:i $0) 100:i)))
parsing: 东直门附近的餐厅，大众家常菜，人均100 : null
parsing: 东直门附近的餐厅，大众家常菜，人均100 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 JIACHANGCAI:s) (< (price:i $0) 100:i)))
parsing: 北大平庄附近的饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s)))
parsing: 北大平庄附近的饭店 : null
parsing: 北大平庄附近的饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s)))
parsing: 北大平庄附近的餐厅，两位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i)))
parsing: 北大平庄附近的餐厅，两位 : null
parsing: 北大平庄附近的餐厅，两位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i)))
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i) (not （taste:t)))
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : null
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i) (not （taste:t)))
parsing: 酒仙桥附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐馆 : null
parsing: 酒仙桥附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : null
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 宣武门附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近的餐厅 : null
parsing: 宣武门附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近的餐厅，烧烤类的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，烧烤类的 : null
parsing: 宣武门附近的餐厅，烧烤类的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : null
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANQIAO:s) (npeople:t $0 5:i) (label:t $0 SHUANGUO:s)))
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : null
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANQIAO:s) (npeople:t $0 5:i) (label:t $0 SHUANGUO:s)))
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (npeople:t $0 10:i) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : null
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (npeople:t $0 10:i) (label:t $0 XIANGCAI:s)))
parsing: 我们想在东直门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 我们想在东直门附近找个餐厅 : null
parsing: 我们想在东直门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 我们想在东直门附近找个地方吃火锅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 我们想在东直门附近找个地方吃火锅 : null
parsing: 我们想在东直门附近找个地方吃火锅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : null
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i) (park:t $0)))
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : null
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i) (park:t $0)))
parsing: 我想在东便门附近订个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s)))
parsing: 我想在东便门附近订个餐厅 : null
parsing: 我想在东便门附近订个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s)))
parsing: 我想在东便门附近订个餐厅，八个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i)))
parsing: 我想在东便门附近订个餐厅，八个人 : null
parsing: 我想在东便门附近订个餐厅，八个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : null
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我们想在天安门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 我们想在天安门附近找个餐厅 : null
parsing: 我们想在天安门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近的餐馆 : null
parsing: 天安门附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近有哪些餐厅 : null
parsing: 天安门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 我们有五个人，想在天安门附近吃个饭 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们有五个人，想在天安门附近吃个饭 : null
parsing: 我们有五个人，想在天安门附近吃个饭 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 5:i) (zone:t $0 TIANANMEN:s) (< (price:i $0) 80:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 5:i) (zone:t $0 TIANANMEN:s) (< (price:i $0) 80:i)))
parsing: 我想在雍和宫附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想在雍和宫附近找个餐厅 : null
parsing: 我想在雍和宫附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想订个雍和宫附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想订个雍和宫附近的餐厅 : null
parsing: 我想订个雍和宫附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : (lambda $0 e (and (restaurant:t $0) (label:t $0 YUECAI:s)))
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : null
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : (lambda $0 e (and (restaurant:t $0) (label:t $0 YUECAI:s)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (npeople:t $0 10:i) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (npeople:t $0 10:i) (< (price:i $0) 60:i)))
parsing: 月坛附近的快捷小吃 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s)))
parsing: 月坛附近的快捷小吃 : null
parsing: 月坛附近的快捷小吃 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s)))
parsing: 月坛附近的快捷小吃，两个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s) (npeople:t $0 2:i)))
parsing: 月坛附近的快捷小吃，两个人 : null
parsing: 月坛附近的快捷小吃，两个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s) (npeople:t $0 2:i)))
parsing: 我想订个餐厅，清淡一些的 : (lambda $0 e (and (restaurant:t $0) (label:t $0 QINGDAN:s)))
parsing: 我想订个餐厅，清淡一些的 : null
parsing: 我想订个餐厅，清淡一些的 : (lambda $0 e (and (restaurant:t $0) (label:t $0 QINGDAN:s)))
parsing: 酒仙桥附近有什么饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近有什么饭店 : null
parsing: 酒仙桥附近有什么饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐厅，要十五人包间 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 酒仙桥附近的餐厅，要十五人包间 : null
parsing: 酒仙桥附近的餐厅，要十五人包间 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : null
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 10:i) (label:t $0 JIACHANGCAI:s)))
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : null
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 10:i) (label:t $0 JIACHANGCAI:s)))
parsing: 西单附近的北京特色小吃，二位 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 BEIJINGTESE:s)))
parsing: 西单附近的北京特色小吃，二位 : null
parsing: 西单附近的北京特色小吃，二位 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 BEIJINGTESE:s)))
parsing: 北大庄附近的餐厅，三位，吃火锅 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 3:i) (label:t $0 HUOGUO:s)))
parsing: 北大庄附近的餐厅，三位，吃火锅 : null
parsing: 北大庄附近的餐厅，三位，吃火锅 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 3:i) (label:t $0 HUOGUO:s)))
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 20:i) (< (price:i $0) 80:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : null
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 20:i) (< (price:i $0) 80:i) (label:t $0 JIACHANGCAI:s)))
parsing: 月坛附近的餐厅，要麻辣口味的 : (lambda $0 e (and (restaurant:t $0) (taste:t $0 MALA:s)))
parsing: 月坛附近的餐厅，要麻辣口味的 : null
parsing: 月坛附近的餐厅，要麻辣口味的 : (lambda $0 e (and (restaurant:t $0) (taste:t $0 MALA:s)))
parsing: 东便门附近的快餐店 : (lambda $0 e (and (restaurant:t $0) (label:t $0 KUAICAN:s)))
parsing: 东便门附近的快餐店 : null
parsing: 东便门附近的快餐店 : (lambda $0 e (and (restaurant:t $0) (label:t $0 KUAICAN:s)))
Testing
parsing: 西单附近的餐厅 : null
parsing: 西单附近有哪些餐厅 : null
parsing: 西单附近的餐厅，人均70 : null
parsing: 西单附近的餐厅，六位，人均七十 : null
parsing: 西单附近的川菜馆 : null
parsing: 西单附近可以吃川菜的餐厅 : null
parsing: 西直门附近人均30的餐厅 : null
parsing: 宣武门附近有哪些餐厅 : null
parsing: 宣武门附近有哪些川菜馆 : null
parsing: 宣武门附近有哪些川菜餐厅 : null
parsing: 中关村附近的餐厅 : null
parsing: 中关村附近的餐厅，要有停车位 : null
parsing: 中关村附近的餐厅，人均80 : null
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : null
parsing: 石景山附近的餐厅 : null
parsing: 石景山附近有哪些餐馆 : null
parsing: 石景山附近的湘菜馆 : null
parsing: 石景山附近的餐厅，人均70 : null
parsing: 东直门附近有哪些餐馆 : null
parsing: 东直门附近的火锅自助餐厅 : null
parsing: 东直门附近的火锅自助餐厅，每位50左右 : null
parsing: 东直门附近的餐厅，大众家常菜，人均100 : null
parsing: 北大平庄附近的饭店 : null
parsing: 北大平庄附近的餐厅，两位 : null
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : null
parsing: 酒仙桥附近的餐馆 : null
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : null
parsing: 宣武门附近的餐厅 : null
parsing: 宣武门附近的餐厅，烧烤类的 : null
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : null
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : null
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : null
parsing: 我们想在东直门附近找个餐厅 : null
parsing: 我们想在东直门附近找个地方吃火锅 : null
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : null
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : null
parsing: 我想在东便门附近订个餐厅 : null
parsing: 我想在东便门附近订个餐厅，八个人 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : null
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : null
parsing: 我们想在天安门附近找个餐厅 : null
parsing: 天安门附近的餐馆 : null
parsing: 天安门附近有哪些餐厅 : null
parsing: 我们有五个人，想在天安门附近吃个饭 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : null
parsing: 我想在雍和宫附近找个餐厅 : null
parsing: 我想订个雍和宫附近的餐厅 : null
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : null
parsing: 月坛附近的快捷小吃 : null
parsing: 月坛附近的快捷小吃，两个人 : null
parsing: 我想订个餐厅，清淡一些的 : null
parsing: 酒仙桥附近有什么饭店 : null
parsing: 酒仙桥附近的餐厅，要十五人包间 : null
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : null
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : null
parsing: 西单附近的北京特色小吃，二位 : null
parsing: 北大庄附近的餐厅，三位，吃火锅 : null
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : null
parsing: 月坛附近的餐厅，要麻辣口味的 : null
parsing: 东便门附近的快餐店 : null
-----------------------------
Recall : 39/64 = 0.609375
Precision : 39/64 = 0.609375
F1: 0.609375
No Parses : 0
EMPTY Recall : 39/64 = 0.609375
EMPTY Precision : 39/64 = 0.609375
EMPTY F1: 0.609375
-----------
Training, iteration 2
parsing: 西单附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近的餐厅 : null
parsing: 西单附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近有哪些餐厅 : null
parsing: 西单附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，人均70 : null
parsing: 西单附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，六位，人均七十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (npeople:t $0 6:i) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，六位，人均七十 : null
parsing: 西单附近的餐厅，六位，人均七十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (npeople:t $0 6:i) (< (price:i $0) 70:i)))
parsing: 西单附近的川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近的川菜馆 : null
parsing: 西单附近的川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近可以吃川菜的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近可以吃川菜的餐厅 : null
parsing: 西单附近可以吃川菜的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西直门附近人均30的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) 30:i)))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (< (price:i $1) $0) (restaurant:t $1) (zone:t $1 XIZHIMEN:s))))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s)))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (< (price:i $2) $1) ($0 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (< (price:i $1) $0) (restaurant:t $1) (zone:t $1 XIZHIMEN:s))))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s)))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (< (price:i $2) $1) ($0 $2)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 XIZHIMEN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (zone:t $2 XIZHIMEN:s) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (zone:t $2 XIZHIMEN:s) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 XIZHIMEN:s))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 XIZHIMEN:s))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP : XIZHIMEN:s
functor: S\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP : XIZHIMEN:s
functor: S\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) (< ($0 $2) $1)))))
parsing: 西直门附近人均30的餐厅 : null
parsing: 西直门附近人均30的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) 30:i)))
parsing: 宣武门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近有哪些餐厅 : null
parsing: 宣武门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近有哪些川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜馆 : null
parsing: 宣武门附近有哪些川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜餐厅 : null
parsing: 宣武门附近有哪些川菜餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 中关村附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
parsing: 中关村附近的餐厅 : null
parsing: 中关村附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
parsing: 中关村附近的餐厅，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (park:t $0:i) (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (park:t $0:i) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (park:t $0:i) (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (park:t $0:i) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (restaurant:t $0) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (restaurant:t $0) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and ($0 $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and ($0 $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : ZHONGGUANCUN:s
functor: S/NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 $0) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : ZHONGGUANCUN:s
functor: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 $0) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S : (park:t $0:i)
functor: S/S : (lambda $0 t (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) $0)))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S : (park:t $0:i)
functor: S\S : (lambda $0 t (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) $0)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : $0:i
functor: S/NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : $0:i
functor: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0))))
parsing: 中关村附近的餐厅，要有停车位 : null
parsing: 中关村附近的餐厅，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
parsing: 中关村附近的餐厅，人均80 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) 80:i)))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (< (price:i $1) $0) (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s))))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (< (price:i $2) $1) ($0 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (< (price:i $1) $0) (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s))))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (< (price:i $2) $1) ($0 $2)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (zone:t $2 ZHONGGUANCUN:s) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (zone:t $2 ZHONGGUANCUN:s) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
parsing: 中关村附近的餐厅，人均80 : null
parsing: 中关村附近的餐厅，人均80 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) 80:i)))
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (npeople:t $0 10:i) (< (price:i $0) 80:i)))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (npeople:t $0 10:i) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (npeople:t $0 10:i) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (npeople:t $1 10:i) (< (price:i $1) $0) (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s))))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (npeople:t $2 10:i) (< (price:i $2) $1) ($0 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (npeople:t $1 10:i) (< (price:i $1) $0) (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s))))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (npeople:t $2 10:i) (< (price:i $2) $1) ($0 $2)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (< (price:i $1) $0) (zone:t $1 ZHONGGUANCUN:s) (restaurant:t $1) (npeople:t $1 10:i))))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 10:i)))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (< (price:i $2) $1) (zone:t $2 ZHONGGUANCUN:s) ($0 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (< (price:i $1) $0) (zone:t $1 ZHONGGUANCUN:s) (restaurant:t $1) (npeople:t $1 10:i))))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 10:i)))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (< (price:i $2) $1) (zone:t $2 ZHONGGUANCUN:s) ($0 $2)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (< (price:i $1) $0) (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i))))
functee: S|NP : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (npeople:t $0 10:i)))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (< (price:i $2) $1) (restaurant:t $2) ($0 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (< (price:i $1) $0) (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i))))
functee: S|NP : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (npeople:t $0 10:i)))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (< (price:i $2) $1) (restaurant:t $2) ($0 $2)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (npeople:t $2 10:i) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (npeople:t $2 10:i) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (npeople:t $2 10:i) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (npeople:t $2 10:i) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (npeople:t $1 10:i) (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (npeople:t $2 10:i) (restaurant:t $2) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (npeople:t $1 10:i) (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (npeople:t $2 10:i) (restaurant:t $2) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (npeople:t $1 10:i) (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (npeople:t $2 10:i) (restaurant:t $2) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (npeople:t $1 10:i) (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (npeople:t $2 10:i) (restaurant:t $2) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (npeople:t $1 10:i) (restaurant:t $1) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (npeople:t $0 10:i) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (npeople:t $0 10:i) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (npeople:t $1 10:i) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (npeople:t $1 10:i) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (npeople:t $1 10:i) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (zone:t $2 ZHONGGUANCUN:s) (npeople:t $2 10:i) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (zone:t $2 ZHONGGUANCUN:s) (npeople:t $2 10:i) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2) (npeople:t $2 10:i) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2) (npeople:t $2 10:i) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 $0) (npeople:t $2 10:i) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 $0) (npeople:t $2 10:i) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (npeople:t $0 10:i))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 ZHONGGUANCUN:s) ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (npeople:t $0 10:i))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 ZHONGGUANCUN:s) ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (< (price:i $1) $0))))
functee: NP : 10:i
functor: S\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 ZHONGGUANCUN:s) (npeople:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (< (price:i $1) $0))))
functee: NP : 10:i
functor: S\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 ZHONGGUANCUN:s) (npeople:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 ZHONGGUANCUN:s) (npeople:t $2 10:i) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 ZHONGGUANCUN:s) (npeople:t $2 10:i) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 ZHONGGUANCUN:s) (npeople:t $2 10:i) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 ZHONGGUANCUN:s) (npeople:t $2 10:i) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 ZHONGGUANCUN:s) (npeople:t $2 10:i) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (npeople:t $1 10:i) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 ZHONGGUANCUN:s) (npeople:t $2 10:i) (< ($0 $2) $1)))))
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : null
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (npeople:t $0 10:i) (< (price:i $0) 80:i)))
parsing: 石景山附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近的餐厅 : null
parsing: 石景山附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近有哪些餐馆 : null
parsing: 石景山附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近的湘菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的湘菜馆 : null
parsing: 石景山附近的湘菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (< (price:i $0) 70:i)))
parsing: 石景山附近的餐厅，人均70 : null
parsing: 石景山附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (< (price:i $0) 70:i)))
parsing: 东直门附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 东直门附近有哪些餐馆 : null
parsing: 东直门附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 东直门附近的火锅自助餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 东直门附近的火锅自助餐厅 : null
parsing: 东直门附近的火锅自助餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 东直门附近的火锅自助餐厅，每位50左右 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 东直门附近的火锅自助餐厅，每位50左右 : null
parsing: 东直门附近的火锅自助餐厅，每位50左右 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 东直门附近的餐厅，大众家常菜，人均100 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 JIACHANGCAI:s) (< (price:i $0) 100:i)))
parsing: 东直门附近的餐厅，大众家常菜，人均100 : null
parsing: 东直门附近的餐厅，大众家常菜，人均100 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 JIACHANGCAI:s) (< (price:i $0) 100:i)))
parsing: 北大平庄附近的饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s)))
parsing: 北大平庄附近的饭店 : null
parsing: 北大平庄附近的饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s)))
parsing: 北大平庄附近的餐厅，两位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i)))
parsing: 北大平庄附近的餐厅，两位 : null
parsing: 北大平庄附近的餐厅，两位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i)))
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i) (not （taste:t)))
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : null
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i) (not （taste:t)))
parsing: 酒仙桥附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐馆 : null
parsing: 酒仙桥附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : null
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 宣武门附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近的餐厅 : null
parsing: 宣武门附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近的餐厅，烧烤类的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，烧烤类的 : null
parsing: 宣武门附近的餐厅，烧烤类的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : null
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANQIAO:s) (npeople:t $0 5:i) (label:t $0 SHUANGUO:s)))
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : null
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANQIAO:s) (npeople:t $0 5:i) (label:t $0 SHUANGUO:s)))
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (npeople:t $0 10:i) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : null
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (npeople:t $0 10:i) (label:t $0 XIANGCAI:s)))
parsing: 我们想在东直门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 我们想在东直门附近找个餐厅 : null
parsing: 我们想在东直门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 我们想在东直门附近找个地方吃火锅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 我们想在东直门附近找个地方吃火锅 : null
parsing: 我们想在东直门附近找个地方吃火锅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : null
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i) (park:t $0)))
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : null
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i) (park:t $0)))
parsing: 我想在东便门附近订个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s)))
parsing: 我想在东便门附近订个餐厅 : null
parsing: 我想在东便门附近订个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s)))
parsing: 我想在东便门附近订个餐厅，八个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i)))
parsing: 我想在东便门附近订个餐厅，八个人 : null
parsing: 我想在东便门附近订个餐厅，八个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : null
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我们想在天安门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 我们想在天安门附近找个餐厅 : null
parsing: 我们想在天安门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近的餐馆 : null
parsing: 天安门附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近有哪些餐厅 : null
parsing: 天安门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 我们有五个人，想在天安门附近吃个饭 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们有五个人，想在天安门附近吃个饭 : null
parsing: 我们有五个人，想在天安门附近吃个饭 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 5:i) (zone:t $0 TIANANMEN:s) (< (price:i $0) 80:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 5:i) (zone:t $0 TIANANMEN:s) (< (price:i $0) 80:i)))
parsing: 我想在雍和宫附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想在雍和宫附近找个餐厅 : null
parsing: 我想在雍和宫附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想订个雍和宫附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想订个雍和宫附近的餐厅 : null
parsing: 我想订个雍和宫附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : (lambda $0 e (and (restaurant:t $0) (label:t $0 YUECAI:s)))
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : null
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : (lambda $0 e (and (restaurant:t $0) (label:t $0 YUECAI:s)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (npeople:t $0 10:i) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (npeople:t $0 10:i) (< (price:i $0) 60:i)))
parsing: 月坛附近的快捷小吃 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s)))
parsing: 月坛附近的快捷小吃 : null
parsing: 月坛附近的快捷小吃 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s)))
parsing: 月坛附近的快捷小吃，两个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s) (npeople:t $0 2:i)))
parsing: 月坛附近的快捷小吃，两个人 : null
parsing: 月坛附近的快捷小吃，两个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s) (npeople:t $0 2:i)))
parsing: 我想订个餐厅，清淡一些的 : (lambda $0 e (and (restaurant:t $0) (label:t $0 QINGDAN:s)))
parsing: 我想订个餐厅，清淡一些的 : null
parsing: 我想订个餐厅，清淡一些的 : (lambda $0 e (and (restaurant:t $0) (label:t $0 QINGDAN:s)))
parsing: 酒仙桥附近有什么饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近有什么饭店 : null
parsing: 酒仙桥附近有什么饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐厅，要十五人包间 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 酒仙桥附近的餐厅，要十五人包间 : null
parsing: 酒仙桥附近的餐厅，要十五人包间 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : null
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 10:i) (label:t $0 JIACHANGCAI:s)))
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : null
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 10:i) (label:t $0 JIACHANGCAI:s)))
parsing: 西单附近的北京特色小吃，二位 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 BEIJINGTESE:s)))
parsing: 西单附近的北京特色小吃，二位 : null
parsing: 西单附近的北京特色小吃，二位 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 BEIJINGTESE:s)))
parsing: 北大庄附近的餐厅，三位，吃火锅 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 3:i) (label:t $0 HUOGUO:s)))
parsing: 北大庄附近的餐厅，三位，吃火锅 : null
parsing: 北大庄附近的餐厅，三位，吃火锅 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 3:i) (label:t $0 HUOGUO:s)))
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 20:i) (< (price:i $0) 80:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : null
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 20:i) (< (price:i $0) 80:i) (label:t $0 JIACHANGCAI:s)))
parsing: 月坛附近的餐厅，要麻辣口味的 : (lambda $0 e (and (restaurant:t $0) (taste:t $0 MALA:s)))
parsing: 月坛附近的餐厅，要麻辣口味的 : null
parsing: 月坛附近的餐厅，要麻辣口味的 : (lambda $0 e (and (restaurant:t $0) (taste:t $0 MALA:s)))
parsing: 东便门附近的快餐店 : (lambda $0 e (and (restaurant:t $0) (label:t $0 KUAICAN:s)))
parsing: 东便门附近的快餐店 : null
parsing: 东便门附近的快餐店 : (lambda $0 e (and (restaurant:t $0) (label:t $0 KUAICAN:s)))
Testing
parsing: 西单附近的餐厅 : null
parsing: 西单附近有哪些餐厅 : null
parsing: 西单附近的餐厅，人均70 : null
parsing: 西单附近的餐厅，六位，人均七十 : null
parsing: 西单附近的川菜馆 : null
parsing: 西单附近可以吃川菜的餐厅 : null
parsing: 西直门附近人均30的餐厅 : null
parsing: 宣武门附近有哪些餐厅 : null
parsing: 宣武门附近有哪些川菜馆 : null
parsing: 宣武门附近有哪些川菜餐厅 : null
parsing: 中关村附近的餐厅 : null
parsing: 中关村附近的餐厅，要有停车位 : null
parsing: 中关村附近的餐厅，人均80 : null
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : null
parsing: 石景山附近的餐厅 : null
parsing: 石景山附近有哪些餐馆 : null
parsing: 石景山附近的湘菜馆 : null
parsing: 石景山附近的餐厅，人均70 : null
parsing: 东直门附近有哪些餐馆 : null
parsing: 东直门附近的火锅自助餐厅 : null
parsing: 东直门附近的火锅自助餐厅，每位50左右 : null
parsing: 东直门附近的餐厅，大众家常菜，人均100 : null
parsing: 北大平庄附近的饭店 : null
parsing: 北大平庄附近的餐厅，两位 : null
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : null
parsing: 酒仙桥附近的餐馆 : null
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : null
parsing: 宣武门附近的餐厅 : null
parsing: 宣武门附近的餐厅，烧烤类的 : null
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : null
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : null
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : null
parsing: 我们想在东直门附近找个餐厅 : null
parsing: 我们想在东直门附近找个地方吃火锅 : null
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : null
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : null
parsing: 我想在东便门附近订个餐厅 : null
parsing: 我想在东便门附近订个餐厅，八个人 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : null
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : null
parsing: 我们想在天安门附近找个餐厅 : null
parsing: 天安门附近的餐馆 : null
parsing: 天安门附近有哪些餐厅 : null
parsing: 我们有五个人，想在天安门附近吃个饭 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : null
parsing: 我想在雍和宫附近找个餐厅 : null
parsing: 我想订个雍和宫附近的餐厅 : null
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : null
parsing: 月坛附近的快捷小吃 : null
parsing: 月坛附近的快捷小吃，两个人 : null
parsing: 我想订个餐厅，清淡一些的 : null
parsing: 酒仙桥附近有什么饭店 : null
parsing: 酒仙桥附近的餐厅，要十五人包间 : null
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : null
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : null
parsing: 西单附近的北京特色小吃，二位 : null
parsing: 北大庄附近的餐厅，三位，吃火锅 : null
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : null
parsing: 月坛附近的餐厅，要麻辣口味的 : null
parsing: 东便门附近的快餐店 : null
-----------------------------
Recall : 29/64 = 0.453125
Precision : 29/64 = 0.453125
F1: 0.453125
No Parses : 0
EMPTY Recall : 29/64 = 0.453125
EMPTY Precision : 29/64 = 0.453125
EMPTY F1: 0.453125
-----------
Training, iteration 3
parsing: 西单附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近的餐厅 : null
parsing: 西单附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近有哪些餐厅 : null
parsing: 西单附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，人均70 : null
parsing: 西单附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，六位，人均七十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (npeople:t $0 6:i) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，六位，人均七十 : null
parsing: 西单附近的餐厅，六位，人均七十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (npeople:t $0 6:i) (< (price:i $0) 70:i)))
parsing: 西单附近的川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近的川菜馆 : null
parsing: 西单附近的川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近可以吃川菜的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近可以吃川菜的餐厅 : null
parsing: 西单附近可以吃川菜的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西直门附近人均30的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) 30:i)))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (< (price:i $1) $0) (restaurant:t $1) (zone:t $1 XIZHIMEN:s))))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s)))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (< (price:i $2) $1) ($0 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (< (price:i $1) $0) (restaurant:t $1) (zone:t $1 XIZHIMEN:s))))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s)))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (< (price:i $2) $1) ($0 $2)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 XIZHIMEN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (zone:t $2 XIZHIMEN:s) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (zone:t $2 XIZHIMEN:s) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 XIZHIMEN:s))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 XIZHIMEN:s))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP : XIZHIMEN:s
functor: S\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP : XIZHIMEN:s
functor: S\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) (< ($0 $2) $1)))))
parsing: 西直门附近人均30的餐厅 : null
parsing: 西直门附近人均30的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) 30:i)))
parsing: 宣武门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近有哪些餐厅 : null
parsing: 宣武门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近有哪些川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜馆 : null
parsing: 宣武门附近有哪些川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜餐厅 : null
parsing: 宣武门附近有哪些川菜餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 中关村附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
parsing: 中关村附近的餐厅 : null
parsing: 中关村附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
parsing: 中关村附近的餐厅，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (park:t $0:i) (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (park:t $0:i) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (park:t $0:i) (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (park:t $0:i) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (restaurant:t $0) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (restaurant:t $0) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and ($0 $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and ($0 $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : ZHONGGUANCUN:s
functor: S/NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 $0) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : ZHONGGUANCUN:s
functor: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 $0) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S : (park:t $0:i)
functor: S/S : (lambda $0 t (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) $0)))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S : (park:t $0:i)
functor: S\S : (lambda $0 t (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) $0)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : $0:i
functor: S/NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : $0:i
functor: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0))))
parsing: 中关村附近的餐厅，要有停车位 : null
parsing: 中关村附近的餐厅，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
parsing: 中关村附近的餐厅，人均80 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) 80:i)))
parsing: 中关村附近的餐厅，人均80 : null
parsing: 中关村附近的餐厅，人均80 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) 80:i)))
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (npeople:t $0 10:i) (< (price:i $0) 80:i)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : null
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (npeople:t $0 10:i) (< (price:i $0) 80:i)))
parsing: 石景山附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近的餐厅 : null
parsing: 石景山附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近有哪些餐馆 : null
parsing: 石景山附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近的湘菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的湘菜馆 : null
parsing: 石景山附近的湘菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (< (price:i $0) 70:i)))
parsing: 石景山附近的餐厅，人均70 : null
parsing: 石景山附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (< (price:i $0) 70:i)))
parsing: 东直门附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 东直门附近有哪些餐馆 : null
parsing: 东直门附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 东直门附近的火锅自助餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 东直门附近的火锅自助餐厅 : null
parsing: 东直门附近的火锅自助餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 东直门附近的火锅自助餐厅，每位50左右 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 东直门附近的火锅自助餐厅，每位50左右 : null
parsing: 东直门附近的火锅自助餐厅，每位50左右 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 东直门附近的餐厅，大众家常菜，人均100 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 JIACHANGCAI:s) (< (price:i $0) 100:i)))
parsing: 东直门附近的餐厅，大众家常菜，人均100 : null
parsing: 东直门附近的餐厅，大众家常菜，人均100 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 JIACHANGCAI:s) (< (price:i $0) 100:i)))
parsing: 北大平庄附近的饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s)))
parsing: 北大平庄附近的饭店 : null
parsing: 北大平庄附近的饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s)))
parsing: 北大平庄附近的餐厅，两位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i)))
parsing: 北大平庄附近的餐厅，两位 : null
parsing: 北大平庄附近的餐厅，两位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i)))
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i) (not （taste:t)))
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : null
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i) (not （taste:t)))
parsing: 酒仙桥附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐馆 : null
parsing: 酒仙桥附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : null
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 宣武门附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近的餐厅 : null
parsing: 宣武门附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近的餐厅，烧烤类的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，烧烤类的 : null
parsing: 宣武门附近的餐厅，烧烤类的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : null
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANQIAO:s) (npeople:t $0 5:i) (label:t $0 SHUANGUO:s)))
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : null
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANQIAO:s) (npeople:t $0 5:i) (label:t $0 SHUANGUO:s)))
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (npeople:t $0 10:i) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : null
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (npeople:t $0 10:i) (label:t $0 XIANGCAI:s)))
parsing: 我们想在东直门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 我们想在东直门附近找个餐厅 : null
parsing: 我们想在东直门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 我们想在东直门附近找个地方吃火锅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 我们想在东直门附近找个地方吃火锅 : null
parsing: 我们想在东直门附近找个地方吃火锅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : null
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i) (park:t $0)))
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : null
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i) (park:t $0)))
parsing: 我想在东便门附近订个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s)))
parsing: 我想在东便门附近订个餐厅 : null
parsing: 我想在东便门附近订个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s)))
parsing: 我想在东便门附近订个餐厅，八个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i)))
parsing: 我想在东便门附近订个餐厅，八个人 : null
parsing: 我想在东便门附近订个餐厅，八个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : null
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我们想在天安门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 我们想在天安门附近找个餐厅 : null
parsing: 我们想在天安门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近的餐馆 : null
parsing: 天安门附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近有哪些餐厅 : null
parsing: 天安门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 我们有五个人，想在天安门附近吃个饭 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们有五个人，想在天安门附近吃个饭 : null
parsing: 我们有五个人，想在天安门附近吃个饭 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 5:i) (zone:t $0 TIANANMEN:s) (< (price:i $0) 80:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 5:i) (zone:t $0 TIANANMEN:s) (< (price:i $0) 80:i)))
parsing: 我想在雍和宫附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想在雍和宫附近找个餐厅 : null
parsing: 我想在雍和宫附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想订个雍和宫附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想订个雍和宫附近的餐厅 : null
parsing: 我想订个雍和宫附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : (lambda $0 e (and (restaurant:t $0) (label:t $0 YUECAI:s)))
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : null
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : (lambda $0 e (and (restaurant:t $0) (label:t $0 YUECAI:s)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (npeople:t $0 10:i) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (npeople:t $0 10:i) (< (price:i $0) 60:i)))
parsing: 月坛附近的快捷小吃 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s)))
parsing: 月坛附近的快捷小吃 : null
parsing: 月坛附近的快捷小吃 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s)))
parsing: 月坛附近的快捷小吃，两个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s) (npeople:t $0 2:i)))
parsing: 月坛附近的快捷小吃，两个人 : null
parsing: 月坛附近的快捷小吃，两个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s) (npeople:t $0 2:i)))
parsing: 我想订个餐厅，清淡一些的 : (lambda $0 e (and (restaurant:t $0) (label:t $0 QINGDAN:s)))
parsing: 我想订个餐厅，清淡一些的 : null
parsing: 我想订个餐厅，清淡一些的 : (lambda $0 e (and (restaurant:t $0) (label:t $0 QINGDAN:s)))
parsing: 酒仙桥附近有什么饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近有什么饭店 : null
parsing: 酒仙桥附近有什么饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐厅，要十五人包间 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 酒仙桥附近的餐厅，要十五人包间 : null
parsing: 酒仙桥附近的餐厅，要十五人包间 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : null
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 10:i) (label:t $0 JIACHANGCAI:s)))
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : null
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 10:i) (label:t $0 JIACHANGCAI:s)))
parsing: 西单附近的北京特色小吃，二位 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 BEIJINGTESE:s)))
parsing: 西单附近的北京特色小吃，二位 : null
parsing: 西单附近的北京特色小吃，二位 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 BEIJINGTESE:s)))
parsing: 北大庄附近的餐厅，三位，吃火锅 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 3:i) (label:t $0 HUOGUO:s)))
parsing: 北大庄附近的餐厅，三位，吃火锅 : null
parsing: 北大庄附近的餐厅，三位，吃火锅 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 3:i) (label:t $0 HUOGUO:s)))
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 20:i) (< (price:i $0) 80:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : null
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 20:i) (< (price:i $0) 80:i) (label:t $0 JIACHANGCAI:s)))
parsing: 月坛附近的餐厅，要麻辣口味的 : (lambda $0 e (and (restaurant:t $0) (taste:t $0 MALA:s)))
parsing: 月坛附近的餐厅，要麻辣口味的 : null
parsing: 月坛附近的餐厅，要麻辣口味的 : (lambda $0 e (and (restaurant:t $0) (taste:t $0 MALA:s)))
parsing: 东便门附近的快餐店 : (lambda $0 e (and (restaurant:t $0) (label:t $0 KUAICAN:s)))
parsing: 东便门附近的快餐店 : null
parsing: 东便门附近的快餐店 : (lambda $0 e (and (restaurant:t $0) (label:t $0 KUAICAN:s)))
Testing
parsing: 西单附近的餐厅 : null
parsing: 西单附近有哪些餐厅 : null
parsing: 西单附近的餐厅，人均70 : null
parsing: 西单附近的餐厅，六位，人均七十 : null
parsing: 西单附近的川菜馆 : null
parsing: 西单附近可以吃川菜的餐厅 : null
parsing: 西直门附近人均30的餐厅 : null
parsing: 宣武门附近有哪些餐厅 : null
parsing: 宣武门附近有哪些川菜馆 : null
parsing: 宣武门附近有哪些川菜餐厅 : null
parsing: 中关村附近的餐厅 : null
parsing: 中关村附近的餐厅，要有停车位 : null
parsing: 中关村附近的餐厅，人均80 : null
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : null
parsing: 石景山附近的餐厅 : null
parsing: 石景山附近有哪些餐馆 : null
parsing: 石景山附近的湘菜馆 : null
parsing: 石景山附近的餐厅，人均70 : null
parsing: 东直门附近有哪些餐馆 : null
parsing: 东直门附近的火锅自助餐厅 : null
parsing: 东直门附近的火锅自助餐厅，每位50左右 : null
parsing: 东直门附近的餐厅，大众家常菜，人均100 : null
parsing: 北大平庄附近的饭店 : null
parsing: 北大平庄附近的餐厅，两位 : null
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : null
parsing: 酒仙桥附近的餐馆 : null
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : null
parsing: 宣武门附近的餐厅 : null
parsing: 宣武门附近的餐厅，烧烤类的 : null
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : null
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : null
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : null
parsing: 我们想在东直门附近找个餐厅 : null
parsing: 我们想在东直门附近找个地方吃火锅 : null
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : null
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : null
parsing: 我想在东便门附近订个餐厅 : null
parsing: 我想在东便门附近订个餐厅，八个人 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : null
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : null
parsing: 我们想在天安门附近找个餐厅 : null
parsing: 天安门附近的餐馆 : null
parsing: 天安门附近有哪些餐厅 : null
parsing: 我们有五个人，想在天安门附近吃个饭 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : null
parsing: 我想在雍和宫附近找个餐厅 : null
parsing: 我想订个雍和宫附近的餐厅 : null
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : null
parsing: 月坛附近的快捷小吃 : null
parsing: 月坛附近的快捷小吃，两个人 : null
parsing: 我想订个餐厅，清淡一些的 : null
parsing: 酒仙桥附近有什么饭店 : null
parsing: 酒仙桥附近的餐厅，要十五人包间 : null
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : null
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : null
parsing: 西单附近的北京特色小吃，二位 : null
parsing: 北大庄附近的餐厅，三位，吃火锅 : null
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : null
parsing: 月坛附近的餐厅，要麻辣口味的 : null
parsing: 东便门附近的快餐店 : null
-----------------------------
Recall : 44/64 = 0.6875
Precision : 44/64 = 0.6875
F1: 0.6875
No Parses : 0
EMPTY Recall : 44/64 = 0.6875
EMPTY Precision : 44/64 = 0.6875
EMPTY F1: 0.6875
-----------
Training, iteration 4
parsing: 西单附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近的餐厅 : null
parsing: 西单附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近有哪些餐厅 : null
parsing: 西单附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，人均70 : null
parsing: 西单附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，六位，人均七十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (npeople:t $0 6:i) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，六位，人均七十 : null
parsing: 西单附近的餐厅，六位，人均七十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (npeople:t $0 6:i) (< (price:i $0) 70:i)))
parsing: 西单附近的川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近的川菜馆 : null
parsing: 西单附近的川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近可以吃川菜的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近可以吃川菜的餐厅 : null
parsing: 西单附近可以吃川菜的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西直门附近人均30的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) 30:i)))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (< (price:i $1) $0) (restaurant:t $1) (zone:t $1 XIZHIMEN:s))))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s)))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (< (price:i $2) $1) ($0 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (< (price:i $1) $0) (restaurant:t $1) (zone:t $1 XIZHIMEN:s))))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s)))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (< (price:i $2) $1) ($0 $2)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 XIZHIMEN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (zone:t $2 XIZHIMEN:s) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (zone:t $2 XIZHIMEN:s) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 XIZHIMEN:s))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 XIZHIMEN:s))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP : XIZHIMEN:s
functor: S\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP : XIZHIMEN:s
functor: S\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) (< ($0 $2) $1)))))
parsing: 西直门附近人均30的餐厅 : null
parsing: 西直门附近人均30的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) 30:i)))
parsing: 宣武门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近有哪些餐厅 : null
parsing: 宣武门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近有哪些川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜馆 : null
parsing: 宣武门附近有哪些川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜餐厅 : null
parsing: 宣武门附近有哪些川菜餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 中关村附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
parsing: 中关村附近的餐厅 : null
parsing: 中关村附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
parsing: 中关村附近的餐厅，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (park:t $0:i) (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (park:t $0:i) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (park:t $0:i) (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (park:t $0:i) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (restaurant:t $0) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (restaurant:t $0) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and ($0 $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and ($0 $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : ZHONGGUANCUN:s
functor: S/NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 $0) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : ZHONGGUANCUN:s
functor: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 $0) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S : (park:t $0:i)
functor: S/S : (lambda $0 t (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) $0)))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S : (park:t $0:i)
functor: S\S : (lambda $0 t (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) $0)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : $0:i
functor: S/NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : $0:i
functor: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0))))
parsing: 中关村附近的餐厅，要有停车位 : null
parsing: 中关村附近的餐厅，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
parsing: 中关村附近的餐厅，人均80 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) 80:i)))
parsing: 中关村附近的餐厅，人均80 : null
parsing: 中关村附近的餐厅，人均80 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) 80:i)))
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (npeople:t $0 10:i) (< (price:i $0) 80:i)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : null
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (npeople:t $0 10:i) (< (price:i $0) 80:i)))
parsing: 石景山附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近的餐厅 : null
parsing: 石景山附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近有哪些餐馆 : null
parsing: 石景山附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近的湘菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的湘菜馆 : null
parsing: 石景山附近的湘菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (< (price:i $0) 70:i)))
parsing: 石景山附近的餐厅，人均70 : null
parsing: 石景山附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (< (price:i $0) 70:i)))
parsing: 东直门附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 东直门附近有哪些餐馆 : null
parsing: 东直门附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 东直门附近的火锅自助餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 东直门附近的火锅自助餐厅 : null
parsing: 东直门附近的火锅自助餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 东直门附近的火锅自助餐厅，每位50左右 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 东直门附近的火锅自助餐厅，每位50左右 : null
parsing: 东直门附近的火锅自助餐厅，每位50左右 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 东直门附近的餐厅，大众家常菜，人均100 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 JIACHANGCAI:s) (< (price:i $0) 100:i)))
parsing: 东直门附近的餐厅，大众家常菜，人均100 : null
parsing: 东直门附近的餐厅，大众家常菜，人均100 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 JIACHANGCAI:s) (< (price:i $0) 100:i)))
parsing: 北大平庄附近的饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s)))
parsing: 北大平庄附近的饭店 : null
parsing: 北大平庄附近的饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s)))
parsing: 北大平庄附近的餐厅，两位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i)))
parsing: 北大平庄附近的餐厅，两位 : null
parsing: 北大平庄附近的餐厅，两位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i)))
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i) (not （taste:t)))
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : null
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i) (not （taste:t)))
parsing: 酒仙桥附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐馆 : null
parsing: 酒仙桥附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : null
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 宣武门附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近的餐厅 : null
parsing: 宣武门附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近的餐厅，烧烤类的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，烧烤类的 : null
parsing: 宣武门附近的餐厅，烧烤类的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : null
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANQIAO:s) (npeople:t $0 5:i) (label:t $0 SHUANGUO:s)))
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : null
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANQIAO:s) (npeople:t $0 5:i) (label:t $0 SHUANGUO:s)))
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (npeople:t $0 10:i) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : null
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (npeople:t $0 10:i) (label:t $0 XIANGCAI:s)))
parsing: 我们想在东直门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 我们想在东直门附近找个餐厅 : null
parsing: 我们想在东直门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 我们想在东直门附近找个地方吃火锅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 我们想在东直门附近找个地方吃火锅 : null
parsing: 我们想在东直门附近找个地方吃火锅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : null
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i) (park:t $0)))
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : null
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i) (park:t $0)))
parsing: 我想在东便门附近订个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s)))
parsing: 我想在东便门附近订个餐厅 : null
parsing: 我想在东便门附近订个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s)))
parsing: 我想在东便门附近订个餐厅，八个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i)))
parsing: 我想在东便门附近订个餐厅，八个人 : null
parsing: 我想在东便门附近订个餐厅，八个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : null
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我们想在天安门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 我们想在天安门附近找个餐厅 : null
parsing: 我们想在天安门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近的餐馆 : null
parsing: 天安门附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近有哪些餐厅 : null
parsing: 天安门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 我们有五个人，想在天安门附近吃个饭 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们有五个人，想在天安门附近吃个饭 : null
parsing: 我们有五个人，想在天安门附近吃个饭 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 5:i) (zone:t $0 TIANANMEN:s) (< (price:i $0) 80:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 5:i) (zone:t $0 TIANANMEN:s) (< (price:i $0) 80:i)))
parsing: 我想在雍和宫附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想在雍和宫附近找个餐厅 : null
parsing: 我想在雍和宫附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想订个雍和宫附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想订个雍和宫附近的餐厅 : null
parsing: 我想订个雍和宫附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : (lambda $0 e (and (restaurant:t $0) (label:t $0 YUECAI:s)))
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : null
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : (lambda $0 e (and (restaurant:t $0) (label:t $0 YUECAI:s)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (npeople:t $0 10:i) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (npeople:t $0 10:i) (< (price:i $0) 60:i)))
parsing: 月坛附近的快捷小吃 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s)))
parsing: 月坛附近的快捷小吃 : null
parsing: 月坛附近的快捷小吃 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s)))
parsing: 月坛附近的快捷小吃，两个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s) (npeople:t $0 2:i)))
parsing: 月坛附近的快捷小吃，两个人 : null
parsing: 月坛附近的快捷小吃，两个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s) (npeople:t $0 2:i)))
parsing: 我想订个餐厅，清淡一些的 : (lambda $0 e (and (restaurant:t $0) (label:t $0 QINGDAN:s)))
parsing: 我想订个餐厅，清淡一些的 : null
parsing: 我想订个餐厅，清淡一些的 : (lambda $0 e (and (restaurant:t $0) (label:t $0 QINGDAN:s)))
parsing: 酒仙桥附近有什么饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近有什么饭店 : null
parsing: 酒仙桥附近有什么饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐厅，要十五人包间 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 酒仙桥附近的餐厅，要十五人包间 : null
parsing: 酒仙桥附近的餐厅，要十五人包间 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : null
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 10:i) (label:t $0 JIACHANGCAI:s)))
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : null
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 10:i) (label:t $0 JIACHANGCAI:s)))
parsing: 西单附近的北京特色小吃，二位 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 BEIJINGTESE:s)))
parsing: 西单附近的北京特色小吃，二位 : null
parsing: 西单附近的北京特色小吃，二位 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 BEIJINGTESE:s)))
parsing: 北大庄附近的餐厅，三位，吃火锅 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 3:i) (label:t $0 HUOGUO:s)))
parsing: 北大庄附近的餐厅，三位，吃火锅 : null
parsing: 北大庄附近的餐厅，三位，吃火锅 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 3:i) (label:t $0 HUOGUO:s)))
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 20:i) (< (price:i $0) 80:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : null
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 20:i) (< (price:i $0) 80:i) (label:t $0 JIACHANGCAI:s)))
parsing: 月坛附近的餐厅，要麻辣口味的 : (lambda $0 e (and (restaurant:t $0) (taste:t $0 MALA:s)))
parsing: 月坛附近的餐厅，要麻辣口味的 : null
parsing: 月坛附近的餐厅，要麻辣口味的 : (lambda $0 e (and (restaurant:t $0) (taste:t $0 MALA:s)))
parsing: 东便门附近的快餐店 : (lambda $0 e (and (restaurant:t $0) (label:t $0 KUAICAN:s)))
parsing: 东便门附近的快餐店 : null
parsing: 东便门附近的快餐店 : (lambda $0 e (and (restaurant:t $0) (label:t $0 KUAICAN:s)))
Testing
parsing: 西单附近的餐厅 : null
parsing: 西单附近有哪些餐厅 : null
parsing: 西单附近的餐厅，人均70 : null
parsing: 西单附近的餐厅，六位，人均七十 : null
parsing: 西单附近的川菜馆 : null
parsing: 西单附近可以吃川菜的餐厅 : null
parsing: 西直门附近人均30的餐厅 : null
parsing: 宣武门附近有哪些餐厅 : null
parsing: 宣武门附近有哪些川菜馆 : null
parsing: 宣武门附近有哪些川菜餐厅 : null
parsing: 中关村附近的餐厅 : null
parsing: 中关村附近的餐厅，要有停车位 : null
parsing: 中关村附近的餐厅，人均80 : null
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : null
parsing: 石景山附近的餐厅 : null
parsing: 石景山附近有哪些餐馆 : null
parsing: 石景山附近的湘菜馆 : null
parsing: 石景山附近的餐厅，人均70 : null
parsing: 东直门附近有哪些餐馆 : null
parsing: 东直门附近的火锅自助餐厅 : null
parsing: 东直门附近的火锅自助餐厅，每位50左右 : null
parsing: 东直门附近的餐厅，大众家常菜，人均100 : null
parsing: 北大平庄附近的饭店 : null
parsing: 北大平庄附近的餐厅，两位 : null
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : null
parsing: 酒仙桥附近的餐馆 : null
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : null
parsing: 宣武门附近的餐厅 : null
parsing: 宣武门附近的餐厅，烧烤类的 : null
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : null
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : null
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : null
parsing: 我们想在东直门附近找个餐厅 : null
parsing: 我们想在东直门附近找个地方吃火锅 : null
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : null
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : null
parsing: 我想在东便门附近订个餐厅 : null
parsing: 我想在东便门附近订个餐厅，八个人 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : null
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : null
parsing: 我们想在天安门附近找个餐厅 : null
parsing: 天安门附近的餐馆 : null
parsing: 天安门附近有哪些餐厅 : null
parsing: 我们有五个人，想在天安门附近吃个饭 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : null
parsing: 我想在雍和宫附近找个餐厅 : null
parsing: 我想订个雍和宫附近的餐厅 : null
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : null
parsing: 月坛附近的快捷小吃 : null
parsing: 月坛附近的快捷小吃，两个人 : null
parsing: 我想订个餐厅，清淡一些的 : null
parsing: 酒仙桥附近有什么饭店 : null
parsing: 酒仙桥附近的餐厅，要十五人包间 : null
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : null
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : null
parsing: 西单附近的北京特色小吃，二位 : null
parsing: 北大庄附近的餐厅，三位，吃火锅 : null
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : null
parsing: 月坛附近的餐厅，要麻辣口味的 : null
parsing: 东便门附近的快餐店 : null
-----------------------------
Recall : 49/64 = 0.765625
Precision : 49/64 = 0.765625
F1: 0.765625
No Parses : 0
EMPTY Recall : 49/64 = 0.765625
EMPTY Precision : 49/64 = 0.765625
EMPTY F1: 0.765625
-----------
Training, iteration 5
parsing: 西单附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近的餐厅 : null
parsing: 西单附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近有哪些餐厅 : null
parsing: 西单附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，人均70 : null
parsing: 西单附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，六位，人均七十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (npeople:t $0 6:i) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，六位，人均七十 : null
parsing: 西单附近的餐厅，六位，人均七十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (npeople:t $0 6:i) (< (price:i $0) 70:i)))
parsing: 西单附近的川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近的川菜馆 : null
parsing: 西单附近的川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近可以吃川菜的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近可以吃川菜的餐厅 : null
parsing: 西单附近可以吃川菜的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西直门附近人均30的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) 30:i)))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (< (price:i $1) $0) (restaurant:t $1) (zone:t $1 XIZHIMEN:s))))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s)))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (< (price:i $2) $1) ($0 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (< (price:i $1) $0) (restaurant:t $1) (zone:t $1 XIZHIMEN:s))))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s)))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (< (price:i $2) $1) ($0 $2)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 XIZHIMEN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (zone:t $2 XIZHIMEN:s) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (zone:t $2 XIZHIMEN:s) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 XIZHIMEN:s))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 XIZHIMEN:s))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP : XIZHIMEN:s
functor: S\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP : XIZHIMEN:s
functor: S\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) (< ($0 $2) $1)))))
parsing: 西直门附近人均30的餐厅 : null
parsing: 西直门附近人均30的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) 30:i)))
parsing: 宣武门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近有哪些餐厅 : null
parsing: 宣武门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近有哪些川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜馆 : null
parsing: 宣武门附近有哪些川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜餐厅 : null
parsing: 宣武门附近有哪些川菜餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 中关村附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
parsing: 中关村附近的餐厅 : null
parsing: 中关村附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
parsing: 中关村附近的餐厅，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (park:t $0:i) (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (park:t $0:i) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (park:t $0:i) (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (park:t $0:i) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (restaurant:t $0) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (restaurant:t $0) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and ($0 $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and ($0 $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : ZHONGGUANCUN:s
functor: S/NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 $0) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : ZHONGGUANCUN:s
functor: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 $0) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S : (park:t $0:i)
functor: S/S : (lambda $0 t (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) $0)))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S : (park:t $0:i)
functor: S\S : (lambda $0 t (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) $0)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : $0:i
functor: S/NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : $0:i
functor: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0))))
parsing: 中关村附近的餐厅，要有停车位 : null
parsing: 中关村附近的餐厅，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
parsing: 中关村附近的餐厅，人均80 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) 80:i)))
parsing: 中关村附近的餐厅，人均80 : null
parsing: 中关村附近的餐厅，人均80 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) 80:i)))
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (npeople:t $0 10:i) (< (price:i $0) 80:i)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : null
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (npeople:t $0 10:i) (< (price:i $0) 80:i)))
parsing: 石景山附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近的餐厅 : null
parsing: 石景山附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近有哪些餐馆 : null
parsing: 石景山附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近的湘菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的湘菜馆 : null
parsing: 石景山附近的湘菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (< (price:i $0) 70:i)))
parsing: 石景山附近的餐厅，人均70 : null
parsing: 石景山附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (< (price:i $0) 70:i)))
parsing: 东直门附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 东直门附近有哪些餐馆 : null
parsing: 东直门附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 东直门附近的火锅自助餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 东直门附近的火锅自助餐厅 : null
parsing: 东直门附近的火锅自助餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 东直门附近的火锅自助餐厅，每位50左右 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 东直门附近的火锅自助餐厅，每位50左右 : null
parsing: 东直门附近的火锅自助餐厅，每位50左右 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 东直门附近的餐厅，大众家常菜，人均100 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 JIACHANGCAI:s) (< (price:i $0) 100:i)))
parsing: 东直门附近的餐厅，大众家常菜，人均100 : null
parsing: 东直门附近的餐厅，大众家常菜，人均100 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 JIACHANGCAI:s) (< (price:i $0) 100:i)))
parsing: 北大平庄附近的饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s)))
parsing: 北大平庄附近的饭店 : null
parsing: 北大平庄附近的饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s)))
parsing: 北大平庄附近的餐厅，两位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i)))
parsing: 北大平庄附近的餐厅，两位 : null
parsing: 北大平庄附近的餐厅，两位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i)))
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i) (not （taste:t)))
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : null
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i) (not （taste:t)))
parsing: 酒仙桥附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐馆 : null
parsing: 酒仙桥附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : null
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 宣武门附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近的餐厅 : null
parsing: 宣武门附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近的餐厅，烧烤类的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，烧烤类的 : null
parsing: 宣武门附近的餐厅，烧烤类的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : null
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANQIAO:s) (npeople:t $0 5:i) (label:t $0 SHUANGUO:s)))
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : null
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANQIAO:s) (npeople:t $0 5:i) (label:t $0 SHUANGUO:s)))
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (npeople:t $0 10:i) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : null
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (npeople:t $0 10:i) (label:t $0 XIANGCAI:s)))
parsing: 我们想在东直门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 我们想在东直门附近找个餐厅 : null
parsing: 我们想在东直门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 我们想在东直门附近找个地方吃火锅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 我们想在东直门附近找个地方吃火锅 : null
parsing: 我们想在东直门附近找个地方吃火锅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : null
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i) (park:t $0)))
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : null
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i) (park:t $0)))
parsing: 我想在东便门附近订个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s)))
parsing: 我想在东便门附近订个餐厅 : null
parsing: 我想在东便门附近订个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s)))
parsing: 我想在东便门附近订个餐厅，八个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i)))
parsing: 我想在东便门附近订个餐厅，八个人 : null
parsing: 我想在东便门附近订个餐厅，八个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : null
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我们想在天安门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 我们想在天安门附近找个餐厅 : null
parsing: 我们想在天安门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近的餐馆 : null
parsing: 天安门附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近有哪些餐厅 : null
parsing: 天安门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 我们有五个人，想在天安门附近吃个饭 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们有五个人，想在天安门附近吃个饭 : null
parsing: 我们有五个人，想在天安门附近吃个饭 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 5:i) (zone:t $0 TIANANMEN:s) (< (price:i $0) 80:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 5:i) (zone:t $0 TIANANMEN:s) (< (price:i $0) 80:i)))
parsing: 我想在雍和宫附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想在雍和宫附近找个餐厅 : null
parsing: 我想在雍和宫附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想订个雍和宫附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想订个雍和宫附近的餐厅 : null
parsing: 我想订个雍和宫附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : (lambda $0 e (and (restaurant:t $0) (label:t $0 YUECAI:s)))
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : null
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : (lambda $0 e (and (restaurant:t $0) (label:t $0 YUECAI:s)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (npeople:t $0 10:i) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (npeople:t $0 10:i) (< (price:i $0) 60:i)))
parsing: 月坛附近的快捷小吃 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s)))
parsing: 月坛附近的快捷小吃 : null
parsing: 月坛附近的快捷小吃 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s)))
parsing: 月坛附近的快捷小吃，两个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s) (npeople:t $0 2:i)))
parsing: 月坛附近的快捷小吃，两个人 : null
parsing: 月坛附近的快捷小吃，两个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s) (npeople:t $0 2:i)))
parsing: 我想订个餐厅，清淡一些的 : (lambda $0 e (and (restaurant:t $0) (label:t $0 QINGDAN:s)))
parsing: 我想订个餐厅，清淡一些的 : null
parsing: 我想订个餐厅，清淡一些的 : (lambda $0 e (and (restaurant:t $0) (label:t $0 QINGDAN:s)))
parsing: 酒仙桥附近有什么饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近有什么饭店 : null
parsing: 酒仙桥附近有什么饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐厅，要十五人包间 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 酒仙桥附近的餐厅，要十五人包间 : null
parsing: 酒仙桥附近的餐厅，要十五人包间 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : null
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 10:i) (label:t $0 JIACHANGCAI:s)))
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : null
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 10:i) (label:t $0 JIACHANGCAI:s)))
parsing: 西单附近的北京特色小吃，二位 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 BEIJINGTESE:s)))
parsing: 西单附近的北京特色小吃，二位 : null
parsing: 西单附近的北京特色小吃，二位 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 BEIJINGTESE:s)))
parsing: 北大庄附近的餐厅，三位，吃火锅 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 3:i) (label:t $0 HUOGUO:s)))
parsing: 北大庄附近的餐厅，三位，吃火锅 : null
parsing: 北大庄附近的餐厅，三位，吃火锅 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 3:i) (label:t $0 HUOGUO:s)))
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 20:i) (< (price:i $0) 80:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : null
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 20:i) (< (price:i $0) 80:i) (label:t $0 JIACHANGCAI:s)))
parsing: 月坛附近的餐厅，要麻辣口味的 : (lambda $0 e (and (restaurant:t $0) (taste:t $0 MALA:s)))
parsing: 月坛附近的餐厅，要麻辣口味的 : null
parsing: 月坛附近的餐厅，要麻辣口味的 : (lambda $0 e (and (restaurant:t $0) (taste:t $0 MALA:s)))
parsing: 东便门附近的快餐店 : (lambda $0 e (and (restaurant:t $0) (label:t $0 KUAICAN:s)))
parsing: 东便门附近的快餐店 : null
parsing: 东便门附近的快餐店 : (lambda $0 e (and (restaurant:t $0) (label:t $0 KUAICAN:s)))
Testing
parsing: 西单附近的餐厅 : null
parsing: 西单附近有哪些餐厅 : null
parsing: 西单附近的餐厅，人均70 : null
parsing: 西单附近的餐厅，六位，人均七十 : null
parsing: 西单附近的川菜馆 : null
parsing: 西单附近可以吃川菜的餐厅 : null
parsing: 西直门附近人均30的餐厅 : null
parsing: 宣武门附近有哪些餐厅 : null
parsing: 宣武门附近有哪些川菜馆 : null
parsing: 宣武门附近有哪些川菜餐厅 : null
parsing: 中关村附近的餐厅 : null
parsing: 中关村附近的餐厅，要有停车位 : null
parsing: 中关村附近的餐厅，人均80 : null
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : null
parsing: 石景山附近的餐厅 : null
parsing: 石景山附近有哪些餐馆 : null
parsing: 石景山附近的湘菜馆 : null
parsing: 石景山附近的餐厅，人均70 : null
parsing: 东直门附近有哪些餐馆 : null
parsing: 东直门附近的火锅自助餐厅 : null
parsing: 东直门附近的火锅自助餐厅，每位50左右 : null
parsing: 东直门附近的餐厅，大众家常菜，人均100 : null
parsing: 北大平庄附近的饭店 : null
parsing: 北大平庄附近的餐厅，两位 : null
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : null
parsing: 酒仙桥附近的餐馆 : null
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : null
parsing: 宣武门附近的餐厅 : null
parsing: 宣武门附近的餐厅，烧烤类的 : null
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : null
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : null
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : null
parsing: 我们想在东直门附近找个餐厅 : null
parsing: 我们想在东直门附近找个地方吃火锅 : null
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : null
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : null
parsing: 我想在东便门附近订个餐厅 : null
parsing: 我想在东便门附近订个餐厅，八个人 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : null
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : null
parsing: 我们想在天安门附近找个餐厅 : null
parsing: 天安门附近的餐馆 : null
parsing: 天安门附近有哪些餐厅 : null
parsing: 我们有五个人，想在天安门附近吃个饭 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : null
parsing: 我想在雍和宫附近找个餐厅 : null
parsing: 我想订个雍和宫附近的餐厅 : null
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : null
parsing: 月坛附近的快捷小吃 : null
parsing: 月坛附近的快捷小吃，两个人 : null
parsing: 我想订个餐厅，清淡一些的 : null
parsing: 酒仙桥附近有什么饭店 : null
parsing: 酒仙桥附近的餐厅，要十五人包间 : null
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : null
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : null
parsing: 西单附近的北京特色小吃，二位 : null
parsing: 北大庄附近的餐厅，三位，吃火锅 : null
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : null
parsing: 月坛附近的餐厅，要麻辣口味的 : null
parsing: 东便门附近的快餐店 : null
-----------------------------
Recall : 50/64 = 0.78125
Precision : 50/64 = 0.78125
F1: 0.78125
No Parses : 0
EMPTY Recall : 50/64 = 0.78125
EMPTY Precision : 50/64 = 0.78125
EMPTY F1: 0.78125
-----------
Training, iteration 6
parsing: 西单附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近的餐厅 : null
parsing: 西单附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近有哪些餐厅 : null
parsing: 西单附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，人均70 : null
parsing: 西单附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，六位，人均七十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (npeople:t $0 6:i) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，六位，人均七十 : null
parsing: 西单附近的餐厅，六位，人均七十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (npeople:t $0 6:i) (< (price:i $0) 70:i)))
parsing: 西单附近的川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近的川菜馆 : null
parsing: 西单附近的川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近可以吃川菜的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近可以吃川菜的餐厅 : null
parsing: 西单附近可以吃川菜的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西直门附近人均30的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) 30:i)))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (< (price:i $1) $0) (restaurant:t $1) (zone:t $1 XIZHIMEN:s))))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s)))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (< (price:i $2) $1) ($0 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (< (price:i $1) $0) (restaurant:t $1) (zone:t $1 XIZHIMEN:s))))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s)))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (< (price:i $2) $1) ($0 $2)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 XIZHIMEN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (zone:t $2 XIZHIMEN:s) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (zone:t $2 XIZHIMEN:s) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 XIZHIMEN:s))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 XIZHIMEN:s))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP : XIZHIMEN:s
functor: S\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP : XIZHIMEN:s
functor: S\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) (< ($0 $2) $1)))))
parsing: 西直门附近人均30的餐厅 : null
parsing: 西直门附近人均30的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) 30:i)))
parsing: 宣武门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近有哪些餐厅 : null
parsing: 宣武门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近有哪些川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜馆 : null
parsing: 宣武门附近有哪些川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜餐厅 : null
parsing: 宣武门附近有哪些川菜餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 中关村附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
parsing: 中关村附近的餐厅 : null
parsing: 中关村附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
parsing: 中关村附近的餐厅，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (park:t $0:i) (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (park:t $0:i) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (park:t $0:i) (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (park:t $0:i) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (restaurant:t $0) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (restaurant:t $0) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and ($0 $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and ($0 $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : ZHONGGUANCUN:s
functor: S/NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 $0) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : ZHONGGUANCUN:s
functor: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 $0) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S : (park:t $0:i)
functor: S/S : (lambda $0 t (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) $0)))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S : (park:t $0:i)
functor: S\S : (lambda $0 t (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) $0)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : $0:i
functor: S/NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : $0:i
functor: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0))))
parsing: 中关村附近的餐厅，要有停车位 : null
parsing: 中关村附近的餐厅，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
parsing: 中关村附近的餐厅，人均80 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) 80:i)))
parsing: 中关村附近的餐厅，人均80 : null
parsing: 中关村附近的餐厅，人均80 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) 80:i)))
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (npeople:t $0 10:i) (< (price:i $0) 80:i)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : null
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (npeople:t $0 10:i) (< (price:i $0) 80:i)))
parsing: 石景山附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近的餐厅 : null
parsing: 石景山附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近有哪些餐馆 : null
parsing: 石景山附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近的湘菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的湘菜馆 : null
parsing: 石景山附近的湘菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (< (price:i $0) 70:i)))
parsing: 石景山附近的餐厅，人均70 : null
parsing: 石景山附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (< (price:i $0) 70:i)))
parsing: 东直门附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 东直门附近有哪些餐馆 : null
parsing: 东直门附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 东直门附近的火锅自助餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 东直门附近的火锅自助餐厅 : null
parsing: 东直门附近的火锅自助餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 东直门附近的火锅自助餐厅，每位50左右 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 东直门附近的火锅自助餐厅，每位50左右 : null
parsing: 东直门附近的火锅自助餐厅，每位50左右 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 东直门附近的餐厅，大众家常菜，人均100 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 JIACHANGCAI:s) (< (price:i $0) 100:i)))
parsing: 东直门附近的餐厅，大众家常菜，人均100 : null
parsing: 东直门附近的餐厅，大众家常菜，人均100 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 JIACHANGCAI:s) (< (price:i $0) 100:i)))
parsing: 北大平庄附近的饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s)))
parsing: 北大平庄附近的饭店 : null
parsing: 北大平庄附近的饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s)))
parsing: 北大平庄附近的餐厅，两位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i)))
parsing: 北大平庄附近的餐厅，两位 : null
parsing: 北大平庄附近的餐厅，两位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i)))
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i) (not （taste:t)))
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : null
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i) (not （taste:t)))
parsing: 酒仙桥附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐馆 : null
parsing: 酒仙桥附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : null
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 宣武门附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近的餐厅 : null
parsing: 宣武门附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近的餐厅，烧烤类的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，烧烤类的 : null
parsing: 宣武门附近的餐厅，烧烤类的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : null
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANQIAO:s) (npeople:t $0 5:i) (label:t $0 SHUANGUO:s)))
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : null
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANQIAO:s) (npeople:t $0 5:i) (label:t $0 SHUANGUO:s)))
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (npeople:t $0 10:i) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : null
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (npeople:t $0 10:i) (label:t $0 XIANGCAI:s)))
parsing: 我们想在东直门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 我们想在东直门附近找个餐厅 : null
parsing: 我们想在东直门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 我们想在东直门附近找个地方吃火锅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 我们想在东直门附近找个地方吃火锅 : null
parsing: 我们想在东直门附近找个地方吃火锅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : null
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i) (park:t $0)))
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : null
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i) (park:t $0)))
parsing: 我想在东便门附近订个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s)))
parsing: 我想在东便门附近订个餐厅 : null
parsing: 我想在东便门附近订个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s)))
parsing: 我想在东便门附近订个餐厅，八个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i)))
parsing: 我想在东便门附近订个餐厅，八个人 : null
parsing: 我想在东便门附近订个餐厅，八个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : null
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我们想在天安门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 我们想在天安门附近找个餐厅 : null
parsing: 我们想在天安门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近的餐馆 : null
parsing: 天安门附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近有哪些餐厅 : null
parsing: 天安门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 我们有五个人，想在天安门附近吃个饭 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们有五个人，想在天安门附近吃个饭 : null
parsing: 我们有五个人，想在天安门附近吃个饭 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 5:i) (zone:t $0 TIANANMEN:s) (< (price:i $0) 80:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 5:i) (zone:t $0 TIANANMEN:s) (< (price:i $0) 80:i)))
parsing: 我想在雍和宫附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想在雍和宫附近找个餐厅 : null
parsing: 我想在雍和宫附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想订个雍和宫附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想订个雍和宫附近的餐厅 : null
parsing: 我想订个雍和宫附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : (lambda $0 e (and (restaurant:t $0) (label:t $0 YUECAI:s)))
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : null
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : (lambda $0 e (and (restaurant:t $0) (label:t $0 YUECAI:s)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (npeople:t $0 10:i) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (npeople:t $0 10:i) (< (price:i $0) 60:i)))
parsing: 月坛附近的快捷小吃 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s)))
parsing: 月坛附近的快捷小吃 : null
parsing: 月坛附近的快捷小吃 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s)))
parsing: 月坛附近的快捷小吃，两个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s) (npeople:t $0 2:i)))
parsing: 月坛附近的快捷小吃，两个人 : null
parsing: 月坛附近的快捷小吃，两个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s) (npeople:t $0 2:i)))
parsing: 我想订个餐厅，清淡一些的 : (lambda $0 e (and (restaurant:t $0) (label:t $0 QINGDAN:s)))
parsing: 我想订个餐厅，清淡一些的 : null
parsing: 我想订个餐厅，清淡一些的 : (lambda $0 e (and (restaurant:t $0) (label:t $0 QINGDAN:s)))
parsing: 酒仙桥附近有什么饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近有什么饭店 : null
parsing: 酒仙桥附近有什么饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐厅，要十五人包间 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 酒仙桥附近的餐厅，要十五人包间 : null
parsing: 酒仙桥附近的餐厅，要十五人包间 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : null
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 10:i) (label:t $0 JIACHANGCAI:s)))
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : null
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 10:i) (label:t $0 JIACHANGCAI:s)))
parsing: 西单附近的北京特色小吃，二位 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 BEIJINGTESE:s)))
parsing: 西单附近的北京特色小吃，二位 : null
parsing: 西单附近的北京特色小吃，二位 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 BEIJINGTESE:s)))
parsing: 北大庄附近的餐厅，三位，吃火锅 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 3:i) (label:t $0 HUOGUO:s)))
parsing: 北大庄附近的餐厅，三位，吃火锅 : null
parsing: 北大庄附近的餐厅，三位，吃火锅 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 3:i) (label:t $0 HUOGUO:s)))
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 20:i) (< (price:i $0) 80:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : null
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 20:i) (< (price:i $0) 80:i) (label:t $0 JIACHANGCAI:s)))
parsing: 月坛附近的餐厅，要麻辣口味的 : (lambda $0 e (and (restaurant:t $0) (taste:t $0 MALA:s)))
parsing: 月坛附近的餐厅，要麻辣口味的 : null
parsing: 月坛附近的餐厅，要麻辣口味的 : (lambda $0 e (and (restaurant:t $0) (taste:t $0 MALA:s)))
parsing: 东便门附近的快餐店 : (lambda $0 e (and (restaurant:t $0) (label:t $0 KUAICAN:s)))
parsing: 东便门附近的快餐店 : null
parsing: 东便门附近的快餐店 : (lambda $0 e (and (restaurant:t $0) (label:t $0 KUAICAN:s)))
Testing
parsing: 西单附近的餐厅 : null
parsing: 西单附近有哪些餐厅 : null
parsing: 西单附近的餐厅，人均70 : null
parsing: 西单附近的餐厅，六位，人均七十 : null
parsing: 西单附近的川菜馆 : null
parsing: 西单附近可以吃川菜的餐厅 : null
parsing: 西直门附近人均30的餐厅 : null
parsing: 宣武门附近有哪些餐厅 : null
parsing: 宣武门附近有哪些川菜馆 : null
parsing: 宣武门附近有哪些川菜餐厅 : null
parsing: 中关村附近的餐厅 : null
parsing: 中关村附近的餐厅，要有停车位 : null
parsing: 中关村附近的餐厅，人均80 : null
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : null
parsing: 石景山附近的餐厅 : null
parsing: 石景山附近有哪些餐馆 : null
parsing: 石景山附近的湘菜馆 : null
parsing: 石景山附近的餐厅，人均70 : null
parsing: 东直门附近有哪些餐馆 : null
parsing: 东直门附近的火锅自助餐厅 : null
parsing: 东直门附近的火锅自助餐厅，每位50左右 : null
parsing: 东直门附近的餐厅，大众家常菜，人均100 : null
parsing: 北大平庄附近的饭店 : null
parsing: 北大平庄附近的餐厅，两位 : null
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : null
parsing: 酒仙桥附近的餐馆 : null
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : null
parsing: 宣武门附近的餐厅 : null
parsing: 宣武门附近的餐厅，烧烤类的 : null
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : null
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : null
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : null
parsing: 我们想在东直门附近找个餐厅 : null
parsing: 我们想在东直门附近找个地方吃火锅 : null
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : null
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : null
parsing: 我想在东便门附近订个餐厅 : null
parsing: 我想在东便门附近订个餐厅，八个人 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : null
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : null
parsing: 我们想在天安门附近找个餐厅 : null
parsing: 天安门附近的餐馆 : null
parsing: 天安门附近有哪些餐厅 : null
parsing: 我们有五个人，想在天安门附近吃个饭 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : null
parsing: 我想在雍和宫附近找个餐厅 : null
parsing: 我想订个雍和宫附近的餐厅 : null
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : null
parsing: 月坛附近的快捷小吃 : null
parsing: 月坛附近的快捷小吃，两个人 : null
parsing: 我想订个餐厅，清淡一些的 : null
parsing: 酒仙桥附近有什么饭店 : null
parsing: 酒仙桥附近的餐厅，要十五人包间 : null
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : null
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : null
parsing: 西单附近的北京特色小吃，二位 : null
parsing: 北大庄附近的餐厅，三位，吃火锅 : null
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : null
parsing: 月坛附近的餐厅，要麻辣口味的 : null
parsing: 东便门附近的快餐店 : null
-----------------------------
Recall : 55/64 = 0.859375
Precision : 55/64 = 0.859375
F1: 0.859375
No Parses : 0
EMPTY Recall : 55/64 = 0.859375
EMPTY Precision : 55/64 = 0.859375
EMPTY F1: 0.859375
-----------
Training, iteration 7
parsing: 西单附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近的餐厅 : null
parsing: 西单附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近有哪些餐厅 : null
parsing: 西单附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，人均70 : null
parsing: 西单附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，六位，人均七十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (npeople:t $0 6:i) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，六位，人均七十 : null
parsing: 西单附近的餐厅，六位，人均七十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (npeople:t $0 6:i) (< (price:i $0) 70:i)))
parsing: 西单附近的川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近的川菜馆 : null
parsing: 西单附近的川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近可以吃川菜的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近可以吃川菜的餐厅 : null
parsing: 西单附近可以吃川菜的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西直门附近人均30的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) 30:i)))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (< (price:i $1) $0) (restaurant:t $1) (zone:t $1 XIZHIMEN:s))))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s)))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (< (price:i $2) $1) ($0 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (< (price:i $1) $0) (restaurant:t $1) (zone:t $1 XIZHIMEN:s))))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s)))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (< (price:i $2) $1) ($0 $2)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 XIZHIMEN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (zone:t $2 XIZHIMEN:s) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (zone:t $2 XIZHIMEN:s) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 XIZHIMEN:s))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 XIZHIMEN:s))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP : XIZHIMEN:s
functor: S\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP : XIZHIMEN:s
functor: S\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) (< ($0 $2) $1)))))
parsing: 西直门附近人均30的餐厅 : null
parsing: 西直门附近人均30的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) 30:i)))
parsing: 宣武门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近有哪些餐厅 : null
parsing: 宣武门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近有哪些川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜馆 : null
parsing: 宣武门附近有哪些川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜餐厅 : null
parsing: 宣武门附近有哪些川菜餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 中关村附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
parsing: 中关村附近的餐厅 : null
parsing: 中关村附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
parsing: 中关村附近的餐厅，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (park:t $0:i) (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (park:t $0:i) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (park:t $0:i) (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (park:t $0:i) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (restaurant:t $0) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (restaurant:t $0) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and ($0 $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and ($0 $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : ZHONGGUANCUN:s
functor: S/NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 $0) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : ZHONGGUANCUN:s
functor: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 $0) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S : (park:t $0:i)
functor: S/S : (lambda $0 t (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) $0)))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S : (park:t $0:i)
functor: S\S : (lambda $0 t (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) $0)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : $0:i
functor: S/NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : $0:i
functor: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0))))
parsing: 中关村附近的餐厅，要有停车位 : null
parsing: 中关村附近的餐厅，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
parsing: 中关村附近的餐厅，人均80 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) 80:i)))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (< (price:i $1) $0) (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s))))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (< (price:i $2) $1) ($0 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (< (price:i $1) $0) (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s))))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (< (price:i $2) $1) ($0 $2)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (zone:t $2 ZHONGGUANCUN:s) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (zone:t $2 ZHONGGUANCUN:s) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
parsing: 中关村附近的餐厅，人均80 : null
parsing: 中关村附近的餐厅，人均80 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) 80:i)))
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (npeople:t $0 10:i) (< (price:i $0) 80:i)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : null
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (npeople:t $0 10:i) (< (price:i $0) 80:i)))
parsing: 石景山附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近的餐厅 : null
parsing: 石景山附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近有哪些餐馆 : null
parsing: 石景山附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近的湘菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的湘菜馆 : null
parsing: 石景山附近的湘菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (< (price:i $0) 70:i)))
parsing: 石景山附近的餐厅，人均70 : null
parsing: 石景山附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (< (price:i $0) 70:i)))
parsing: 东直门附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 东直门附近有哪些餐馆 : null
parsing: 东直门附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 东直门附近的火锅自助餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 东直门附近的火锅自助餐厅 : null
parsing: 东直门附近的火锅自助餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 东直门附近的火锅自助餐厅，每位50左右 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 东直门附近的火锅自助餐厅，每位50左右 : null
parsing: 东直门附近的火锅自助餐厅，每位50左右 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 东直门附近的餐厅，大众家常菜，人均100 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 JIACHANGCAI:s) (< (price:i $0) 100:i)))
parsing: 东直门附近的餐厅，大众家常菜，人均100 : null
parsing: 东直门附近的餐厅，大众家常菜，人均100 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 JIACHANGCAI:s) (< (price:i $0) 100:i)))
parsing: 北大平庄附近的饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s)))
parsing: 北大平庄附近的饭店 : null
parsing: 北大平庄附近的饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s)))
parsing: 北大平庄附近的餐厅，两位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i)))
parsing: 北大平庄附近的餐厅，两位 : null
parsing: 北大平庄附近的餐厅，两位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i)))
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i) (not （taste:t)))
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : null
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i) (not （taste:t)))
parsing: 酒仙桥附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐馆 : null
parsing: 酒仙桥附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : null
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 宣武门附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近的餐厅 : null
parsing: 宣武门附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近的餐厅，烧烤类的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，烧烤类的 : null
parsing: 宣武门附近的餐厅，烧烤类的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : null
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANQIAO:s) (npeople:t $0 5:i) (label:t $0 SHUANGUO:s)))
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : null
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANQIAO:s) (npeople:t $0 5:i) (label:t $0 SHUANGUO:s)))
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (npeople:t $0 10:i) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : null
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (npeople:t $0 10:i) (label:t $0 XIANGCAI:s)))
parsing: 我们想在东直门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 我们想在东直门附近找个餐厅 : null
parsing: 我们想在东直门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 我们想在东直门附近找个地方吃火锅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 我们想在东直门附近找个地方吃火锅 : null
parsing: 我们想在东直门附近找个地方吃火锅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : null
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i) (park:t $0)))
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : null
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i) (park:t $0)))
parsing: 我想在东便门附近订个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s)))
parsing: 我想在东便门附近订个餐厅 : null
parsing: 我想在东便门附近订个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s)))
parsing: 我想在东便门附近订个餐厅，八个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i)))
parsing: 我想在东便门附近订个餐厅，八个人 : null
parsing: 我想在东便门附近订个餐厅，八个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : null
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我们想在天安门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 我们想在天安门附近找个餐厅 : null
parsing: 我们想在天安门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近的餐馆 : null
parsing: 天安门附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近有哪些餐厅 : null
parsing: 天安门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 我们有五个人，想在天安门附近吃个饭 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们有五个人，想在天安门附近吃个饭 : null
parsing: 我们有五个人，想在天安门附近吃个饭 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 5:i) (zone:t $0 TIANANMEN:s) (< (price:i $0) 80:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 5:i) (zone:t $0 TIANANMEN:s) (< (price:i $0) 80:i)))
parsing: 我想在雍和宫附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想在雍和宫附近找个餐厅 : null
parsing: 我想在雍和宫附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想订个雍和宫附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想订个雍和宫附近的餐厅 : null
parsing: 我想订个雍和宫附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : (lambda $0 e (and (restaurant:t $0) (label:t $0 YUECAI:s)))
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : null
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : (lambda $0 e (and (restaurant:t $0) (label:t $0 YUECAI:s)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (npeople:t $0 10:i) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (npeople:t $0 10:i) (< (price:i $0) 60:i)))
parsing: 月坛附近的快捷小吃 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s)))
parsing: 月坛附近的快捷小吃 : null
parsing: 月坛附近的快捷小吃 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s)))
parsing: 月坛附近的快捷小吃，两个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s) (npeople:t $0 2:i)))
parsing: 月坛附近的快捷小吃，两个人 : null
parsing: 月坛附近的快捷小吃，两个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s) (npeople:t $0 2:i)))
parsing: 我想订个餐厅，清淡一些的 : (lambda $0 e (and (restaurant:t $0) (label:t $0 QINGDAN:s)))
parsing: 我想订个餐厅，清淡一些的 : null
parsing: 我想订个餐厅，清淡一些的 : (lambda $0 e (and (restaurant:t $0) (label:t $0 QINGDAN:s)))
parsing: 酒仙桥附近有什么饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近有什么饭店 : null
parsing: 酒仙桥附近有什么饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐厅，要十五人包间 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 酒仙桥附近的餐厅，要十五人包间 : null
parsing: 酒仙桥附近的餐厅，要十五人包间 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : null
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 10:i) (label:t $0 JIACHANGCAI:s)))
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : null
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 10:i) (label:t $0 JIACHANGCAI:s)))
parsing: 西单附近的北京特色小吃，二位 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 BEIJINGTESE:s)))
parsing: 西单附近的北京特色小吃，二位 : null
parsing: 西单附近的北京特色小吃，二位 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 BEIJINGTESE:s)))
parsing: 北大庄附近的餐厅，三位，吃火锅 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 3:i) (label:t $0 HUOGUO:s)))
parsing: 北大庄附近的餐厅，三位，吃火锅 : null
parsing: 北大庄附近的餐厅，三位，吃火锅 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 3:i) (label:t $0 HUOGUO:s)))
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 20:i) (< (price:i $0) 80:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : null
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 20:i) (< (price:i $0) 80:i) (label:t $0 JIACHANGCAI:s)))
parsing: 月坛附近的餐厅，要麻辣口味的 : (lambda $0 e (and (restaurant:t $0) (taste:t $0 MALA:s)))
parsing: 月坛附近的餐厅，要麻辣口味的 : null
parsing: 月坛附近的餐厅，要麻辣口味的 : (lambda $0 e (and (restaurant:t $0) (taste:t $0 MALA:s)))
parsing: 东便门附近的快餐店 : (lambda $0 e (and (restaurant:t $0) (label:t $0 KUAICAN:s)))
parsing: 东便门附近的快餐店 : null
parsing: 东便门附近的快餐店 : (lambda $0 e (and (restaurant:t $0) (label:t $0 KUAICAN:s)))
Testing
parsing: 西单附近的餐厅 : null
parsing: 西单附近有哪些餐厅 : null
parsing: 西单附近的餐厅，人均70 : null
parsing: 西单附近的餐厅，六位，人均七十 : null
parsing: 西单附近的川菜馆 : null
parsing: 西单附近可以吃川菜的餐厅 : null
parsing: 西直门附近人均30的餐厅 : null
parsing: 宣武门附近有哪些餐厅 : null
parsing: 宣武门附近有哪些川菜馆 : null
parsing: 宣武门附近有哪些川菜餐厅 : null
parsing: 中关村附近的餐厅 : null
parsing: 中关村附近的餐厅，要有停车位 : null
parsing: 中关村附近的餐厅，人均80 : null
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : null
parsing: 石景山附近的餐厅 : null
parsing: 石景山附近有哪些餐馆 : null
parsing: 石景山附近的湘菜馆 : null
parsing: 石景山附近的餐厅，人均70 : null
parsing: 东直门附近有哪些餐馆 : null
parsing: 东直门附近的火锅自助餐厅 : null
parsing: 东直门附近的火锅自助餐厅，每位50左右 : null
parsing: 东直门附近的餐厅，大众家常菜，人均100 : null
parsing: 北大平庄附近的饭店 : null
parsing: 北大平庄附近的餐厅，两位 : null
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : null
parsing: 酒仙桥附近的餐馆 : null
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : null
parsing: 宣武门附近的餐厅 : null
parsing: 宣武门附近的餐厅，烧烤类的 : null
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : null
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : null
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : null
parsing: 我们想在东直门附近找个餐厅 : null
parsing: 我们想在东直门附近找个地方吃火锅 : null
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : null
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : null
parsing: 我想在东便门附近订个餐厅 : null
parsing: 我想在东便门附近订个餐厅，八个人 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : null
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : null
parsing: 我们想在天安门附近找个餐厅 : null
parsing: 天安门附近的餐馆 : null
parsing: 天安门附近有哪些餐厅 : null
parsing: 我们有五个人，想在天安门附近吃个饭 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : null
parsing: 我想在雍和宫附近找个餐厅 : null
parsing: 我想订个雍和宫附近的餐厅 : null
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : null
parsing: 月坛附近的快捷小吃 : null
parsing: 月坛附近的快捷小吃，两个人 : null
parsing: 我想订个餐厅，清淡一些的 : null
parsing: 酒仙桥附近有什么饭店 : null
parsing: 酒仙桥附近的餐厅，要十五人包间 : null
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : null
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : null
parsing: 西单附近的北京特色小吃，二位 : null
parsing: 北大庄附近的餐厅，三位，吃火锅 : null
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : null
parsing: 月坛附近的餐厅，要麻辣口味的 : null
parsing: 东便门附近的快餐店 : null
-----------------------------
Recall : 56/64 = 0.875
Precision : 56/64 = 0.875
F1: 0.875
No Parses : 0
EMPTY Recall : 56/64 = 0.875
EMPTY Precision : 56/64 = 0.875
EMPTY F1: 0.875
-----------
Training, iteration 8
parsing: 西单附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近的餐厅 : null
parsing: 西单附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近有哪些餐厅 : null
parsing: 西单附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，人均70 : null
parsing: 西单附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，六位，人均七十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (npeople:t $0 6:i) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，六位，人均七十 : null
parsing: 西单附近的餐厅，六位，人均七十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (npeople:t $0 6:i) (< (price:i $0) 70:i)))
parsing: 西单附近的川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近的川菜馆 : null
parsing: 西单附近的川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近可以吃川菜的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近可以吃川菜的餐厅 : null
parsing: 西单附近可以吃川菜的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西直门附近人均30的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) 30:i)))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (< (price:i $1) $0) (restaurant:t $1) (zone:t $1 XIZHIMEN:s))))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s)))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (< (price:i $2) $1) ($0 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (< (price:i $1) $0) (restaurant:t $1) (zone:t $1 XIZHIMEN:s))))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s)))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (< (price:i $2) $1) ($0 $2)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 XIZHIMEN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (zone:t $2 XIZHIMEN:s) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (zone:t $2 XIZHIMEN:s) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 XIZHIMEN:s))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 XIZHIMEN:s))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP : XIZHIMEN:s
functor: S\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP : XIZHIMEN:s
functor: S\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) (< ($0 $2) $1)))))
parsing: 西直门附近人均30的餐厅 : null
parsing: 西直门附近人均30的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) 30:i)))
parsing: 宣武门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近有哪些餐厅 : null
parsing: 宣武门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近有哪些川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜馆 : null
parsing: 宣武门附近有哪些川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜餐厅 : null
parsing: 宣武门附近有哪些川菜餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 中关村附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
parsing: 中关村附近的餐厅 : null
parsing: 中关村附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
parsing: 中关村附近的餐厅，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (park:t $0:i) (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (park:t $0:i) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (park:t $0:i) (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (park:t $0:i) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (restaurant:t $0) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (restaurant:t $0) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and ($0 $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and ($0 $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : ZHONGGUANCUN:s
functor: S/NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 $0) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : ZHONGGUANCUN:s
functor: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 $0) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S : (park:t $0:i)
functor: S/S : (lambda $0 t (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) $0)))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S : (park:t $0:i)
functor: S\S : (lambda $0 t (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) $0)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : $0:i
functor: S/NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : $0:i
functor: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0))))
parsing: 中关村附近的餐厅，要有停车位 : null
parsing: 中关村附近的餐厅，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
parsing: 中关村附近的餐厅，人均80 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) 80:i)))
parsing: 中关村附近的餐厅，人均80 : null
parsing: 中关村附近的餐厅，人均80 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) 80:i)))
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (npeople:t $0 10:i) (< (price:i $0) 80:i)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : null
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (npeople:t $0 10:i) (< (price:i $0) 80:i)))
parsing: 石景山附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近的餐厅 : null
parsing: 石景山附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近有哪些餐馆 : null
parsing: 石景山附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近的湘菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的湘菜馆 : null
parsing: 石景山附近的湘菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (< (price:i $0) 70:i)))
parsing: 石景山附近的餐厅，人均70 : null
parsing: 石景山附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (< (price:i $0) 70:i)))
parsing: 东直门附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 东直门附近有哪些餐馆 : null
parsing: 东直门附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 东直门附近的火锅自助餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 东直门附近的火锅自助餐厅 : null
parsing: 东直门附近的火锅自助餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 东直门附近的火锅自助餐厅，每位50左右 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 东直门附近的火锅自助餐厅，每位50左右 : null
parsing: 东直门附近的火锅自助餐厅，每位50左右 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 东直门附近的餐厅，大众家常菜，人均100 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 JIACHANGCAI:s) (< (price:i $0) 100:i)))
parsing: 东直门附近的餐厅，大众家常菜，人均100 : null
parsing: 东直门附近的餐厅，大众家常菜，人均100 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 JIACHANGCAI:s) (< (price:i $0) 100:i)))
parsing: 北大平庄附近的饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s)))
parsing: 北大平庄附近的饭店 : null
parsing: 北大平庄附近的饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s)))
parsing: 北大平庄附近的餐厅，两位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i)))
parsing: 北大平庄附近的餐厅，两位 : null
parsing: 北大平庄附近的餐厅，两位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i)))
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i) (not （taste:t)))
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : null
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i) (not （taste:t)))
parsing: 酒仙桥附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐馆 : null
parsing: 酒仙桥附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : null
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 宣武门附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近的餐厅 : null
parsing: 宣武门附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近的餐厅，烧烤类的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，烧烤类的 : null
parsing: 宣武门附近的餐厅，烧烤类的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : null
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANQIAO:s) (npeople:t $0 5:i) (label:t $0 SHUANGUO:s)))
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : null
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANQIAO:s) (npeople:t $0 5:i) (label:t $0 SHUANGUO:s)))
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (npeople:t $0 10:i) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : null
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (npeople:t $0 10:i) (label:t $0 XIANGCAI:s)))
parsing: 我们想在东直门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 我们想在东直门附近找个餐厅 : null
parsing: 我们想在东直门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 我们想在东直门附近找个地方吃火锅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 我们想在东直门附近找个地方吃火锅 : null
parsing: 我们想在东直门附近找个地方吃火锅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : null
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i) (park:t $0)))
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : null
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i) (park:t $0)))
parsing: 我想在东便门附近订个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s)))
parsing: 我想在东便门附近订个餐厅 : null
parsing: 我想在东便门附近订个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s)))
parsing: 我想在东便门附近订个餐厅，八个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i)))
parsing: 我想在东便门附近订个餐厅，八个人 : null
parsing: 我想在东便门附近订个餐厅，八个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : null
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我们想在天安门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 我们想在天安门附近找个餐厅 : null
parsing: 我们想在天安门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近的餐馆 : null
parsing: 天安门附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近有哪些餐厅 : null
parsing: 天安门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 我们有五个人，想在天安门附近吃个饭 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们有五个人，想在天安门附近吃个饭 : null
parsing: 我们有五个人，想在天安门附近吃个饭 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 5:i) (zone:t $0 TIANANMEN:s) (< (price:i $0) 80:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 5:i) (zone:t $0 TIANANMEN:s) (< (price:i $0) 80:i)))
parsing: 我想在雍和宫附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想在雍和宫附近找个餐厅 : null
parsing: 我想在雍和宫附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想订个雍和宫附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想订个雍和宫附近的餐厅 : null
parsing: 我想订个雍和宫附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : (lambda $0 e (and (restaurant:t $0) (label:t $0 YUECAI:s)))
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : null
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : (lambda $0 e (and (restaurant:t $0) (label:t $0 YUECAI:s)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (npeople:t $0 10:i) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (npeople:t $0 10:i) (< (price:i $0) 60:i)))
parsing: 月坛附近的快捷小吃 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s)))
parsing: 月坛附近的快捷小吃 : null
parsing: 月坛附近的快捷小吃 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s)))
parsing: 月坛附近的快捷小吃，两个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s) (npeople:t $0 2:i)))
parsing: 月坛附近的快捷小吃，两个人 : null
parsing: 月坛附近的快捷小吃，两个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s) (npeople:t $0 2:i)))
parsing: 我想订个餐厅，清淡一些的 : (lambda $0 e (and (restaurant:t $0) (label:t $0 QINGDAN:s)))
parsing: 我想订个餐厅，清淡一些的 : null
parsing: 我想订个餐厅，清淡一些的 : (lambda $0 e (and (restaurant:t $0) (label:t $0 QINGDAN:s)))
parsing: 酒仙桥附近有什么饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近有什么饭店 : null
parsing: 酒仙桥附近有什么饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐厅，要十五人包间 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 酒仙桥附近的餐厅，要十五人包间 : null
parsing: 酒仙桥附近的餐厅，要十五人包间 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : null
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 10:i) (label:t $0 JIACHANGCAI:s)))
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : null
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 10:i) (label:t $0 JIACHANGCAI:s)))
parsing: 西单附近的北京特色小吃，二位 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 BEIJINGTESE:s)))
parsing: 西单附近的北京特色小吃，二位 : null
parsing: 西单附近的北京特色小吃，二位 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 BEIJINGTESE:s)))
parsing: 北大庄附近的餐厅，三位，吃火锅 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 3:i) (label:t $0 HUOGUO:s)))
parsing: 北大庄附近的餐厅，三位，吃火锅 : null
parsing: 北大庄附近的餐厅，三位，吃火锅 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 3:i) (label:t $0 HUOGUO:s)))
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 20:i) (< (price:i $0) 80:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : null
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 20:i) (< (price:i $0) 80:i) (label:t $0 JIACHANGCAI:s)))
parsing: 月坛附近的餐厅，要麻辣口味的 : (lambda $0 e (and (restaurant:t $0) (taste:t $0 MALA:s)))
parsing: 月坛附近的餐厅，要麻辣口味的 : null
parsing: 月坛附近的餐厅，要麻辣口味的 : (lambda $0 e (and (restaurant:t $0) (taste:t $0 MALA:s)))
parsing: 东便门附近的快餐店 : (lambda $0 e (and (restaurant:t $0) (label:t $0 KUAICAN:s)))
parsing: 东便门附近的快餐店 : null
parsing: 东便门附近的快餐店 : (lambda $0 e (and (restaurant:t $0) (label:t $0 KUAICAN:s)))
Testing
parsing: 西单附近的餐厅 : null
parsing: 西单附近有哪些餐厅 : null
parsing: 西单附近的餐厅，人均70 : null
parsing: 西单附近的餐厅，六位，人均七十 : null
parsing: 西单附近的川菜馆 : null
parsing: 西单附近可以吃川菜的餐厅 : null
parsing: 西直门附近人均30的餐厅 : null
parsing: 宣武门附近有哪些餐厅 : null
parsing: 宣武门附近有哪些川菜馆 : null
parsing: 宣武门附近有哪些川菜餐厅 : null
parsing: 中关村附近的餐厅 : null
parsing: 中关村附近的餐厅，要有停车位 : null
parsing: 中关村附近的餐厅，人均80 : null
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : null
parsing: 石景山附近的餐厅 : null
parsing: 石景山附近有哪些餐馆 : null
parsing: 石景山附近的湘菜馆 : null
parsing: 石景山附近的餐厅，人均70 : null
parsing: 东直门附近有哪些餐馆 : null
parsing: 东直门附近的火锅自助餐厅 : null
parsing: 东直门附近的火锅自助餐厅，每位50左右 : null
parsing: 东直门附近的餐厅，大众家常菜，人均100 : null
parsing: 北大平庄附近的饭店 : null
parsing: 北大平庄附近的餐厅，两位 : null
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : null
parsing: 酒仙桥附近的餐馆 : null
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : null
parsing: 宣武门附近的餐厅 : null
parsing: 宣武门附近的餐厅，烧烤类的 : null
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : null
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : null
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : null
parsing: 我们想在东直门附近找个餐厅 : null
parsing: 我们想在东直门附近找个地方吃火锅 : null
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : null
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : null
parsing: 我想在东便门附近订个餐厅 : null
parsing: 我想在东便门附近订个餐厅，八个人 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : null
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : null
parsing: 我们想在天安门附近找个餐厅 : null
parsing: 天安门附近的餐馆 : null
parsing: 天安门附近有哪些餐厅 : null
parsing: 我们有五个人，想在天安门附近吃个饭 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : null
parsing: 我想在雍和宫附近找个餐厅 : null
parsing: 我想订个雍和宫附近的餐厅 : null
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : null
parsing: 月坛附近的快捷小吃 : null
parsing: 月坛附近的快捷小吃，两个人 : null
parsing: 我想订个餐厅，清淡一些的 : null
parsing: 酒仙桥附近有什么饭店 : null
parsing: 酒仙桥附近的餐厅，要十五人包间 : null
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : null
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : null
parsing: 西单附近的北京特色小吃，二位 : null
parsing: 北大庄附近的餐厅，三位，吃火锅 : null
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : null
parsing: 月坛附近的餐厅，要麻辣口味的 : null
parsing: 东便门附近的快餐店 : null
-----------------------------
Recall : 57/64 = 0.890625
Precision : 57/64 = 0.890625
F1: 0.890625
No Parses : 0
EMPTY Recall : 57/64 = 0.890625
EMPTY Precision : 57/64 = 0.890625
EMPTY F1: 0.890625
-----------
Training, iteration 9
parsing: 西单附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近的餐厅 : null
parsing: 西单附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近有哪些餐厅 : null
parsing: 西单附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s)))
parsing: 西单附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，人均70 : null
parsing: 西单附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，六位，人均七十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (npeople:t $0 6:i) (< (price:i $0) 70:i)))
parsing: 西单附近的餐厅，六位，人均七十 : null
parsing: 西单附近的餐厅，六位，人均七十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (npeople:t $0 6:i) (< (price:i $0) 70:i)))
parsing: 西单附近的川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近的川菜馆 : null
parsing: 西单附近的川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近可以吃川菜的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西单附近可以吃川菜的餐厅 : null
parsing: 西单附近可以吃川菜的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIDAN:s) (label:t $0 CHUANCAI:s)))
parsing: 西直门附近人均30的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) 30:i)))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (< (price:i $1) $0) (restaurant:t $1) (zone:t $1 XIZHIMEN:s))))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s)))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (< (price:i $2) $1) ($0 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (< (price:i $1) $0) (restaurant:t $1) (zone:t $1 XIZHIMEN:s))))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s)))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (< (price:i $2) $1) ($0 $2)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $0) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (restaurant:t $1) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 XIZHIMEN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 XIZHIMEN:s) (< (price:i $0) $1))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (zone:t $2 XIZHIMEN:s) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (zone:t $2 XIZHIMEN:s) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 XIZHIMEN:s))
functor: S\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 XIZHIMEN:s))
functor: S\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and (restaurant:t $2) ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP : XIZHIMEN:s
functor: S\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP : XIZHIMEN:s
functor: S\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 XIZHIMEN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (restaurant:t $2) (zone:t $2 XIZHIMEN:s) (< ($0 $2) $1)))))
parsing: 西直门附近人均30的餐厅 : null
parsing: 西直门附近人均30的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XIZHIMEN:s) (< (price:i $0) 30:i)))
parsing: 宣武门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近有哪些餐厅 : null
parsing: 宣武门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近有哪些川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜馆 : null
parsing: 宣武门附近有哪些川菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 宣武门附近有哪些川菜餐厅 : null
parsing: 宣武门附近有哪些川菜餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 CHUANCAI:s)))
parsing: 中关村附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
parsing: 中关村附近的餐厅 : null
parsing: 中关村附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
parsing: 中关村附近的餐厅，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (park:t $0:i) (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (park:t $0:i) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (park:t $0:i) (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (park:t $0:i) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (restaurant:t $0) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (restaurant:t $0) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (restaurant:t $0) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (and (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and ($0 $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (restaurant:t $0))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and ($0 $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S/(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (restaurant:t $1) ($0 $1) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : ZHONGGUANCUN:s
functor: S/NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 $0) (park:t $0:i))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : ZHONGGUANCUN:s
functor: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 $0) (park:t $0:i))))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S : (park:t $0:i)
functor: S/S : (lambda $0 t (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) $0)))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: S : (park:t $0:i)
functor: S\S : (lambda $0 t (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) $0)))
ERROR 1: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : $0:i
functor: S/NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0))))
ERROR 2: null in Cat split
cat: S : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
functee: NP : $0:i
functor: S\NP : (lambda $0 e (lambda $1 e (and (restaurant:t $1) (zone:t $1 ZHONGGUANCUN:s) (park:t $0))))
parsing: 中关村附近的餐厅，要有停车位 : null
parsing: 中关村附近的餐厅，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (park:t $0:i)))
parsing: 中关村附近的餐厅，人均80 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) 80:i)))
parsing: 中关村附近的餐厅，人均80 : null
parsing: 中关村附近的餐厅，人均80 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) 80:i)))
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (npeople:t $0 10:i) (< (price:i $0) 80:i)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $0 ZHONGGUANCUN:s) (< (price:i $0) $1))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $2 $1))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e ($0 $1 $2))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e ($0 $1)))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP/(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP : (lambda $0 e (zone:t $0 ZHONGGUANCUN:s))
functor: S|NP\NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (lambda $2 e (and ($0 $2) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP/NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP : ZHONGGUANCUN:s
functor: S|NP\NP\NP : (lambda $0 e (lambda $1 e (lambda $2 e (and (zone:t $2 $0) (< (price:i $2) $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $0) $1)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $2 $1)))))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP/(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: S|NP|NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
functor: S|NP\NP\(S|NP|NP) : (lambda $0 <e,<e,t>> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) ($0 $1 $2)))))
ERROR 3: null in Cat split
come functor: S|NP\(S|NP) : (lambda $0 <e,t> (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) ($0 $1))))
come functee: S|NP\NP : (lambda $0 e (lambda $1 e (< (price:i $1) $0)))
ERROR 1: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP/(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
ERROR 2: null in Cat split
cat: S|NP\NP : (lambda $0 e (lambda $1 e (and (zone:t $1 ZHONGGUANCUN:s) (< (price:i $1) $0))))
functee: NP|NP : (lambda $0 e (price:i $0))
functor: S|NP\NP\(NP|NP) : (lambda $0 <e,e> (lambda $1 e (lambda $2 e (and (zone:t $2 ZHONGGUANCUN:s) (< ($0 $2) $1)))))
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : null
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 ZHONGGUANCUN:s) (npeople:t $0 10:i) (< (price:i $0) 80:i)))
parsing: 石景山附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近的餐厅 : null
parsing: 石景山附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近有哪些餐馆 : null
parsing: 石景山附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s)))
parsing: 石景山附近的湘菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的湘菜馆 : null
parsing: 石景山附近的湘菜馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (< (price:i $0) 70:i)))
parsing: 石景山附近的餐厅，人均70 : null
parsing: 石景山附近的餐厅，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (< (price:i $0) 70:i)))
parsing: 东直门附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 东直门附近有哪些餐馆 : null
parsing: 东直门附近有哪些餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 东直门附近的火锅自助餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 东直门附近的火锅自助餐厅 : null
parsing: 东直门附近的火锅自助餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 东直门附近的火锅自助餐厅，每位50左右 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 东直门附近的火锅自助餐厅，每位50左右 : null
parsing: 东直门附近的火锅自助餐厅，每位50左右 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 东直门附近的餐厅，大众家常菜，人均100 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 JIACHANGCAI:s) (< (price:i $0) 100:i)))
parsing: 东直门附近的餐厅，大众家常菜，人均100 : null
parsing: 东直门附近的餐厅，大众家常菜，人均100 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 JIACHANGCAI:s) (< (price:i $0) 100:i)))
parsing: 北大平庄附近的饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s)))
parsing: 北大平庄附近的饭店 : null
parsing: 北大平庄附近的饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s)))
parsing: 北大平庄附近的餐厅，两位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i)))
parsing: 北大平庄附近的餐厅，两位 : null
parsing: 北大平庄附近的餐厅，两位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i)))
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i) (not （taste:t)))
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : null
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 BEIDAPINGZHUANG:s) (npeople:t $0 2:i) (not （taste:t)))
parsing: 酒仙桥附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐馆 : null
parsing: 酒仙桥附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : null
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 宣武门附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近的餐厅 : null
parsing: 宣武门附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s)))
parsing: 宣武门附近的餐厅，烧烤类的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，烧烤类的 : null
parsing: 宣武门附近的餐厅，烧烤类的 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : null
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 XUANWUMEN:s) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANQIAO:s) (npeople:t $0 5:i) (label:t $0 SHUANGUO:s)))
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : null
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANQIAO:s) (npeople:t $0 5:i) (label:t $0 SHUANGUO:s)))
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (npeople:t $0 10:i) (label:t $0 XIANGCAI:s)))
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : null
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 SHIJINGSHAN:s) (npeople:t $0 10:i) (label:t $0 XIANGCAI:s)))
parsing: 我们想在东直门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 我们想在东直门附近找个餐厅 : null
parsing: 我们想在东直门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s)))
parsing: 我们想在东直门附近找个地方吃火锅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 我们想在东直门附近找个地方吃火锅 : null
parsing: 我们想在东直门附近找个地方吃火锅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s)))
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : null
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i)))
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i) (park:t $0)))
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : null
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGZHIMEN:s) (label:t $0 HUOGUO:s) (< (price:i $0) 50:i) (park:t $0)))
parsing: 我想在东便门附近订个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s)))
parsing: 我想在东便门附近订个餐厅 : null
parsing: 我想在东便门附近订个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s)))
parsing: 我想在东便门附近订个餐厅，八个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i)))
parsing: 我想在东便门附近订个餐厅，八个人 : null
parsing: 我想在东便门附近订个餐厅，八个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : null
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 DONGBIANMEN:s) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我们想在天安门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 我们想在天安门附近找个餐厅 : null
parsing: 我们想在天安门附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近的餐馆 : null
parsing: 天安门附近的餐馆 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 天安门附近有哪些餐厅 : null
parsing: 天安门附近有哪些餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s)))
parsing: 我们有五个人，想在天安门附近吃个饭 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们有五个人，想在天安门附近吃个饭 : null
parsing: 我们有五个人，想在天安门附近吃个饭 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 TIANANMEN:s) (npeople:t $0 5:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 5:i) (zone:t $0 TIANANMEN:s) (< (price:i $0) 80:i)))
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 5:i) (zone:t $0 TIANANMEN:s) (< (price:i $0) 80:i)))
parsing: 我想在雍和宫附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想在雍和宫附近找个餐厅 : null
parsing: 我想在雍和宫附近找个餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想订个雍和宫附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想订个雍和宫附近的餐厅 : null
parsing: 我想订个雍和宫附近的餐厅 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s)))
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : (lambda $0 e (and (restaurant:t $0) (label:t $0 YUECAI:s)))
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : null
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : (lambda $0 e (and (restaurant:t $0) (label:t $0 YUECAI:s)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (npeople:t $0 10:i) (< (price:i $0) 60:i)))
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YONGHEGONG:s) (label:t $0 YUECAI:s) (npeople:t $0 10:i) (< (price:i $0) 60:i)))
parsing: 月坛附近的快捷小吃 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s)))
parsing: 月坛附近的快捷小吃 : null
parsing: 月坛附近的快捷小吃 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s)))
parsing: 月坛附近的快捷小吃，两个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s) (npeople:t $0 2:i)))
parsing: 月坛附近的快捷小吃，两个人 : null
parsing: 月坛附近的快捷小吃，两个人 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 YUETAN:s) (label:t $0 KUAIJIEXIAOCHI:s) (npeople:t $0 2:i)))
parsing: 我想订个餐厅，清淡一些的 : (lambda $0 e (and (restaurant:t $0) (label:t $0 QINGDAN:s)))
parsing: 我想订个餐厅，清淡一些的 : null
parsing: 我想订个餐厅，清淡一些的 : (lambda $0 e (and (restaurant:t $0) (label:t $0 QINGDAN:s)))
parsing: 酒仙桥附近有什么饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近有什么饭店 : null
parsing: 酒仙桥附近有什么饭店 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s)))
parsing: 酒仙桥附近的餐厅，要十五人包间 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 酒仙桥附近的餐厅，要十五人包间 : null
parsing: 酒仙桥附近的餐厅，要十五人包间 : (lambda $0 e (and (restaurant:t $0) (zone:t $0 JIUXIANQIAO:s) (npeople:t $0 15:i)))
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : null
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 SHAOKAO:s)))
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 10:i) (label:t $0 JIACHANGCAI:s)))
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : null
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 10:i) (label:t $0 JIACHANGCAI:s)))
parsing: 西单附近的北京特色小吃，二位 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 BEIJINGTESE:s)))
parsing: 西单附近的北京特色小吃，二位 : null
parsing: 西单附近的北京特色小吃，二位 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 2:i) (label:t $0 BEIJINGTESE:s)))
parsing: 北大庄附近的餐厅，三位，吃火锅 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 3:i) (label:t $0 HUOGUO:s)))
parsing: 北大庄附近的餐厅，三位，吃火锅 : null
parsing: 北大庄附近的餐厅，三位，吃火锅 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 3:i) (label:t $0 HUOGUO:s)))
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 20:i) (< (price:i $0) 80:i) (label:t $0 JIACHANGCAI:s)))
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : null
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : (lambda $0 e (and (restaurant:t $0) (npeople:t $0 20:i) (< (price:i $0) 80:i) (label:t $0 JIACHANGCAI:s)))
parsing: 月坛附近的餐厅，要麻辣口味的 : (lambda $0 e (and (restaurant:t $0) (taste:t $0 MALA:s)))
parsing: 月坛附近的餐厅，要麻辣口味的 : null
parsing: 月坛附近的餐厅，要麻辣口味的 : (lambda $0 e (and (restaurant:t $0) (taste:t $0 MALA:s)))
parsing: 东便门附近的快餐店 : (lambda $0 e (and (restaurant:t $0) (label:t $0 KUAICAN:s)))
parsing: 东便门附近的快餐店 : null
parsing: 东便门附近的快餐店 : (lambda $0 e (and (restaurant:t $0) (label:t $0 KUAICAN:s)))
Testing
parsing: 西单附近的餐厅 : null
parsing: 西单附近有哪些餐厅 : null
parsing: 西单附近的餐厅，人均70 : null
parsing: 西单附近的餐厅，六位，人均七十 : null
parsing: 西单附近的川菜馆 : null
parsing: 西单附近可以吃川菜的餐厅 : null
parsing: 西直门附近人均30的餐厅 : null
parsing: 宣武门附近有哪些餐厅 : null
parsing: 宣武门附近有哪些川菜馆 : null
parsing: 宣武门附近有哪些川菜餐厅 : null
parsing: 中关村附近的餐厅 : null
parsing: 中关村附近的餐厅，要有停车位 : null
parsing: 中关村附近的餐厅，人均80 : null
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : null
parsing: 石景山附近的餐厅 : null
parsing: 石景山附近有哪些餐馆 : null
parsing: 石景山附近的湘菜馆 : null
parsing: 石景山附近的餐厅，人均70 : null
parsing: 东直门附近有哪些餐馆 : null
parsing: 东直门附近的火锅自助餐厅 : null
parsing: 东直门附近的火锅自助餐厅，每位50左右 : null
parsing: 东直门附近的餐厅，大众家常菜，人均100 : null
parsing: 北大平庄附近的饭店 : null
parsing: 北大平庄附近的餐厅，两位 : null
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : null
parsing: 酒仙桥附近的餐馆 : null
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : null
parsing: 宣武门附近的餐厅 : null
parsing: 宣武门附近的餐厅，烧烤类的 : null
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : null
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : null
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : null
parsing: 我们想在东直门附近找个餐厅 : null
parsing: 我们想在东直门附近找个地方吃火锅 : null
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : null
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : null
parsing: 我想在东便门附近订个餐厅 : null
parsing: 我想在东便门附近订个餐厅，八个人 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : null
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : null
parsing: 我们想在天安门附近找个餐厅 : null
parsing: 天安门附近的餐馆 : null
parsing: 天安门附近有哪些餐厅 : null
parsing: 我们有五个人，想在天安门附近吃个饭 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : null
parsing: 我想在雍和宫附近找个餐厅 : null
parsing: 我想订个雍和宫附近的餐厅 : null
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : null
parsing: 月坛附近的快捷小吃 : null
parsing: 月坛附近的快捷小吃，两个人 : null
parsing: 我想订个餐厅，清淡一些的 : null
parsing: 酒仙桥附近有什么饭店 : null
parsing: 酒仙桥附近的餐厅，要十五人包间 : null
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : null
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : null
parsing: 西单附近的北京特色小吃，二位 : null
parsing: 北大庄附近的餐厅，三位，吃火锅 : null
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : null
parsing: 月坛附近的餐厅，要麻辣口味的 : null
parsing: 东便门附近的快餐店 : null
-----------------------------
Recall : 56/64 = 0.875
Precision : 56/64 = 0.875
F1: 0.875
No Parses : 0
EMPTY Recall : 56/64 = 0.875
EMPTY Precision : 56/64 = 0.875
EMPTY F1: 0.875
-----------
Print lexicon...
Start testing...
parsing: 西单附近的餐厅 : null
parsing: 西单附近有哪些餐厅 : null
parsing: 西单附近的餐厅，人均70 : null
parsing: 西单附近的餐厅，六位，人均七十 : null
parsing: 西单附近的川菜馆 : null
parsing: 西单附近可以吃川菜的餐厅 : null
parsing: 西直门附近人均30的餐厅 : null
parsing: 宣武门附近有哪些餐厅 : null
parsing: 宣武门附近有哪些川菜馆 : null
parsing: 宣武门附近有哪些川菜餐厅 : null
parsing: 中关村附近的餐厅 : null
parsing: 中关村附近的餐厅，要有停车位 : null
parsing: 中关村附近的餐厅，人均80 : null
parsing: 中关村附近带包间的餐厅，十个人的，人均80元 : null
parsing: 石景山附近的餐厅 : null
parsing: 石景山附近有哪些餐馆 : null
parsing: 石景山附近的湘菜馆 : null
parsing: 石景山附近的餐厅，人均70 : null
parsing: 东直门附近有哪些餐馆 : null
parsing: 东直门附近的火锅自助餐厅 : null
parsing: 东直门附近的火锅自助餐厅，每位50左右 : null
parsing: 东直门附近的餐厅，大众家常菜，人均100 : null
parsing: 北大平庄附近的饭店 : null
parsing: 北大平庄附近的餐厅，两位 : null
parsing: 北大平庄附近的餐厅，两位，不要太辣的 : null
parsing: 酒仙桥附近的餐馆 : null
parsing: 酒仙桥附近的餐厅，要有十五人包间。 : null
parsing: 宣武门附近的餐厅 : null
parsing: 宣武门附近的餐厅，烧烤类的 : null
parsing: 宣武门附近的餐厅，两个人，烧烤类的。 : null
parsing: 带五人包间的餐厅，天桥附近，涮锅类的，人均60 : null
parsing: 石景山附近的餐厅，要有容纳十人的包间，湘菜馆，人均70 : null
parsing: 我们想在东直门附近找个餐厅 : null
parsing: 我们想在东直门附近找个地方吃火锅 : null
parsing: 我们想在东直门附近找个地方吃火锅，人均50 : null
parsing: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位 : null
parsing: 我想在东便门附近订个餐厅 : null
parsing: 我想在东便门附近订个餐厅，八个人 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元 : null
parsing: 我想在东便门附近订个餐厅，八个人，人均100元，家常菜 : null
parsing: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜 : null
parsing: 我们想在天安门附近找个餐厅 : null
parsing: 天安门附近的餐馆 : null
parsing: 天安门附近有哪些餐厅 : null
parsing: 我们有五个人，想在天安门附近吃个饭 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人 : null
parsing: 我们想在天安门广场附近找个餐厅，五个人，人均八十 : null
parsing: 我想在雍和宫附近找个餐厅 : null
parsing: 我想订个雍和宫附近的餐厅 : null
parsing: 我想在雍和宫附近找个餐厅吃粤菜 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，人均六十 : null
parsing: 我想在雍和宫附近找个吃粤菜的餐厅，十个人，人均六十 : null
parsing: 月坛附近的快捷小吃 : null
parsing: 月坛附近的快捷小吃，两个人 : null
parsing: 我想订个餐厅，清淡一些的 : null
parsing: 酒仙桥附近有什么饭店 : null
parsing: 酒仙桥附近的餐厅，要十五人包间 : null
parsing: 我们想在宣武门附近找个地方吃烧烤，两人 : null
parsing: 西单附近的餐厅，十个人的包间，大众家常菜 : null
parsing: 西单附近的北京特色小吃，二位 : null
parsing: 北大庄附近的餐厅，三位，吃火锅 : null
parsing: 我想订个可以容纳二十人的包间餐厅，人均80元，地坛附近，大众家常菜 : null
parsing: 月坛附近的餐厅，要麻辣口味的 : null
parsing: 东便门附近的快餐店 : null
-----------------------------
Recall : 56/64 = 0.875
Precision : 56/64 = 0.875
F1: 0.875
No Parses : 0
EMPTY Recall : 56/64 = 0.875
EMPTY Precision : 56/64 = 0.875
EMPTY F1: 0.875
-----------
