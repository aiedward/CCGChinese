Whole Size: 621
split finish



******************************
Beam size = 200
******************************

fold 0
Train Size: 559

Test Size: 62

log4j:WARN No appenders could be found for logger (DICLOG).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
alpha_0 = 1.0
C = 1.0E-5
initialMultiplier = 10.0
NP init = 10.0
Parser beam  = 200

Start train
add Dataset
add Dataset
Start training...
Training, iteration 0
Training, iteration 1
Training, iteration 2
Training, iteration 3
Training, iteration 4
Print lexicon...
Start printing lexicon
Start testing on train set...
WRONG
Sentence: 想吃宫保鸡丁
Sem: (lambda $0 e (hasCuisine:t $0 宫保鸡丁:c))
Res: (lambda $0 e (npeople:t $0 5:i))
WRONG
Sentence: 我们10人，想找一个川菜馆，在清华大学附近
Sem: (lambda $0 e (and (zone:t $0 清华大学:zn) (npeople:t $0 10:i) (label:t $0 川菜:lb)))
Res: (lambda $0 e (and (zone:t $0 清华大学:zn) (npeople:t $0 10:i)))
WRONG
Sentence: 我们想在东直门附近找个餐厅吃火锅，人均50左右，要有停车位
Sem: (lambda $0 e (and (zone:t $0 东直门:zn) (label:t $0 火锅:lb) (< (price:i $0) 50:i) (park:t $0)))
Res: (lambda $0 e (and (zone:t $0 东直门:zn) (< (price:i $0) 50:i) (park:t $0)))
WRONG
Sentence: 我想在东便门附近订个餐厅，八个人，人均120元
Sem: (lambda $0 e (and (zone:t $0 东便门:zn) (npeople:t $0 8:i) (< (price:i $0) 120:i)))
Res: (lambda $0 e (and (label:t $0 淮扬菜:lb) (< (price:i $0) 120:i) (zone:t $0 东便门:zn) (npeople:t $0 8:i)))
WRONG
Sentence: 月坛附近的小吃快餐，两个人
Sem: (lambda $0 e (and (zone:t $0 月坛:zn) (label:t $0 小吃快餐:lb) (npeople:t $0 2:i)))
Res: (lambda $0 e (and (zone:t $0 月坛:zn) (label:t $0 小吃快餐:lb)))
WRONG
Sentence: 西单附近的餐厅，十个人的包间，大众家常菜
Sem: (lambda $0 e (and (npeople:t $0 10:i) (label:t $0 家常菜:lb)))
Res: (lambda $0 e (and (zone:t $0 西单:zn) (npeople:t $0 10:i) (label:t $0 家常菜:lb)))
WRONG
Sentence: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，家常菜
Sem: (lambda $0 e (and (zone:t $0 东便门:zn) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 家常菜:lb)))
Res: (lambda $0 e (and (< (price:i $0) 100:i) (label:t $0 家常菜:lb) (< (price:i $0) 50:i) (npeople:t $0 8:i)))
WRONG
Sentence: 前门附近的餐厅，两位，不要太辣的
Sem: (lambda $0 e (and (zone:t $0 前门:zn) (npeople:t $0 2:i) (not (label:t $0 川菜:lb))))
Res: (lambda $0 e (and (zone:t $0 前门:zn) (npeople:t $0 2:i)))
WRONG
Sentence: 我想订个带包间的餐厅，有八个人，东便门附近，人均100元，清真菜
Sem: (lambda $0 e (and (zone:t $0 东便门:zn) (npeople:t $0 8:i) (< (price:i $0) 100:i) (label:t $0 清真菜:lb)))
Res: (lambda $0 e (and (< (price:i $0) 100:i) (label:t $0 清真菜:lb) (< (price:i $0) 50:i) (npeople:t $0 8:i)))
WRONG
Sentence: 我想找附近的和合谷
Sem: (address:s 和合谷:r)
Res: (lambda $0 e (zone:t 和合谷:r $0))
WRONG
Sentence: 我想在清河附近找家淮扬菜馆
Sem: (lambda $0 e (and (zone:t $0 清河:zn) (label:t $0 淮扬菜:lb)))
Res: (lambda $0 e (zone:t $0 清河:zn))
WRONG
Sentence: 我们想在三里屯附近找个餐厅吃火锅，人均50左右，要有停车位
Sem: (lambda $0 e (and (zone:t $0 三里屯:zn) (label:t $0 火锅:lb) (< (price:i $0) 50:i) (park:t $0)))
Res: (lambda $0 e (and (zone:t $0 三里屯:zn) (< (price:i $0) 50:i) (park:t $0)))
WRONG
Sentence: 宣武门附近的餐厅，十个人的包间，大众家常菜
Sem: (lambda $0 e (and (npeople:t $0 10:i) (label:t $0 家常菜:lb)))
Res: (lambda $0 e (and (zone:t $0 宣武门:zn) (npeople:t $0 10:i) (label:t $0 家常菜:lb)))
-----------------------------
Recall : 546/559 = 0.9767441860465116
Precision : 546/559 = 0.9767441860465116
F1: 0.9767441860465116
No Parses : 0
-----------
Start testing on test set...
NO PARSE
Sentence: 石景山附近的餐厅
Sem: (lambda $0 e (zone:t $0 石景山:zn))
NO PARSE
Sentence: 石景山附近有哪些餐馆
Sem: (lambda $0 e (zone:t $0 石景山:zn))
NO PARSE
Sentence: 石景山附近的湘菜馆
Sem: (lambda $0 e (and (zone:t $0 石景山:zn) (label:t $0 湘菜:lb)))
NO PARSE
Sentence: 石景山附近的餐厅，人均70
Sem: (lambda $0 e (and (zone:t $0 石景山:zn) (< (price:i $0) 70:i)))
NO PARSE
Sentence: 东直门附近的火锅自助餐厅，每位50左右
Sem: (lambda $0 e (and (zone:t $0 东直门:zn) (label:t $0 火锅:lb) (< (price:i $0) 50:i)))
NO PARSE
Sentence: 东四十条的日式自助摊
Sem: (lambda $0 e (and (zone:t $0 东四十条:zn) (label:t $0 日式自助:lb)))
NO PARSE
Sentence: 亦鲜有停车的地方吗
Sem: (park:t 亦鲜:r)
NO PARSE
Sentence: 带五人包间的餐厅，五棵松附近，涮锅类的，人均60
Sem: (lambda $0 e (and (zone:t $0 五棵松:zn) (npeople:t $0 5:i) (label:t $0 火锅:lb)))
-----------------------------
Recall : 54/62 = 0.8709677419354839
Precision : 54/54 = 1.0
F1: 0.9310344827586207
No Parses : 8
-----------
fold 1
Train Size: 559

Test Size: 62

alpha_0 = 1.0
C = 1.0E-5
initialMultiplier = 10.0
NP init = 10.0
Parser beam  = 200

Start train
add Dataset
add Dataset
Start training...
Training, iteration 0
Training, iteration 1
Training, iteration 2
Training, iteration 3
